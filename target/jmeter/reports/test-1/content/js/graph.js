/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 583.0, "minX": 0.0, "maxY": 21394.0, "series": [{"data": [[0.0, 979.0], [0.1, 979.0], [0.2, 979.0], [0.3, 979.0], [0.4, 979.0], [0.5, 979.0], [0.6, 979.0], [0.7, 979.0], [0.8, 979.0], [0.9, 979.0], [1.0, 979.0], [1.1, 979.0], [1.2, 979.0], [1.3, 979.0], [1.4, 979.0], [1.5, 979.0], [1.6, 979.0], [1.7, 979.0], [1.8, 979.0], [1.9, 979.0], [2.0, 979.0], [2.1, 979.0], [2.2, 979.0], [2.3, 979.0], [2.4, 979.0], [2.5, 979.0], [2.6, 979.0], [2.7, 979.0], [2.8, 979.0], [2.9, 979.0], [3.0, 979.0], [3.1, 979.0], [3.2, 979.0], [3.3, 979.0], [3.4, 979.0], [3.5, 979.0], [3.6, 979.0], [3.7, 979.0], [3.8, 979.0], [3.9, 979.0], [4.0, 979.0], [4.1, 979.0], [4.2, 979.0], [4.3, 979.0], [4.4, 979.0], [4.5, 979.0], [4.6, 979.0], [4.7, 979.0], [4.8, 979.0], [4.9, 979.0], [5.0, 979.0], [5.1, 979.0], [5.2, 979.0], [5.3, 979.0], [5.4, 979.0], [5.5, 979.0], [5.6, 979.0], [5.7, 979.0], [5.8, 979.0], [5.9, 979.0], [6.0, 979.0], [6.1, 979.0], [6.2, 979.0], [6.3, 979.0], [6.4, 979.0], [6.5, 979.0], [6.6, 979.0], [6.7, 979.0], [6.8, 979.0], [6.9, 979.0], [7.0, 979.0], [7.1, 979.0], [7.2, 979.0], [7.3, 979.0], [7.4, 979.0], [7.5, 979.0], [7.6, 979.0], [7.7, 979.0], [7.8, 979.0], [7.9, 979.0], [8.0, 979.0], [8.1, 979.0], [8.2, 979.0], [8.3, 979.0], [8.4, 979.0], [8.5, 979.0], [8.6, 979.0], [8.7, 979.0], [8.8, 979.0], [8.9, 979.0], [9.0, 979.0], [9.1, 979.0], [9.2, 979.0], [9.3, 979.0], [9.4, 979.0], [9.5, 979.0], [9.6, 979.0], [9.7, 979.0], [9.8, 979.0], [9.9, 979.0], [10.0, 979.0], [10.1, 979.0], [10.2, 979.0], [10.3, 979.0], [10.4, 979.0], [10.5, 979.0], [10.6, 979.0], [10.7, 979.0], [10.8, 979.0], [10.9, 979.0], [11.0, 979.0], [11.1, 979.0], [11.2, 979.0], [11.3, 979.0], [11.4, 979.0], [11.5, 979.0], [11.6, 979.0], [11.7, 979.0], [11.8, 979.0], [11.9, 979.0], [12.0, 979.0], [12.1, 979.0], [12.2, 979.0], [12.3, 979.0], [12.4, 979.0], [12.5, 979.0], [12.6, 979.0], [12.7, 979.0], [12.8, 979.0], [12.9, 979.0], [13.0, 979.0], [13.1, 979.0], [13.2, 979.0], [13.3, 979.0], [13.4, 979.0], [13.5, 979.0], [13.6, 979.0], [13.7, 979.0], [13.8, 979.0], [13.9, 979.0], [14.0, 979.0], [14.1, 979.0], [14.2, 979.0], [14.3, 979.0], [14.4, 979.0], [14.5, 979.0], [14.6, 979.0], [14.7, 979.0], [14.8, 979.0], [14.9, 979.0], [15.0, 979.0], [15.1, 979.0], [15.2, 979.0], [15.3, 979.0], [15.4, 979.0], [15.5, 979.0], [15.6, 979.0], [15.7, 979.0], [15.8, 979.0], [15.9, 979.0], [16.0, 979.0], [16.1, 979.0], [16.2, 979.0], [16.3, 979.0], [16.4, 979.0], [16.5, 979.0], [16.6, 979.0], [16.7, 979.0], [16.8, 979.0], [16.9, 979.0], [17.0, 979.0], [17.1, 979.0], [17.2, 979.0], [17.3, 979.0], [17.4, 979.0], [17.5, 979.0], [17.6, 979.0], [17.7, 979.0], [17.8, 979.0], [17.9, 979.0], [18.0, 979.0], [18.1, 979.0], [18.2, 979.0], [18.3, 979.0], [18.4, 979.0], [18.5, 979.0], [18.6, 979.0], [18.7, 979.0], [18.8, 979.0], [18.9, 979.0], [19.0, 979.0], [19.1, 979.0], [19.2, 979.0], [19.3, 979.0], [19.4, 979.0], [19.5, 979.0], [19.6, 979.0], [19.7, 979.0], [19.8, 979.0], [19.9, 979.0], [20.0, 979.0], [20.1, 979.0], [20.2, 979.0], [20.3, 979.0], [20.4, 979.0], [20.5, 979.0], [20.6, 979.0], [20.7, 979.0], [20.8, 979.0], [20.9, 979.0], [21.0, 979.0], [21.1, 979.0], [21.2, 979.0], [21.3, 979.0], [21.4, 979.0], [21.5, 979.0], [21.6, 979.0], [21.7, 979.0], [21.8, 979.0], [21.9, 979.0], [22.0, 979.0], [22.1, 979.0], [22.2, 979.0], [22.3, 979.0], [22.4, 979.0], [22.5, 979.0], [22.6, 979.0], [22.7, 979.0], [22.8, 979.0], [22.9, 979.0], [23.0, 979.0], [23.1, 979.0], [23.2, 979.0], [23.3, 979.0], [23.4, 979.0], [23.5, 979.0], [23.6, 979.0], [23.7, 979.0], [23.8, 979.0], [23.9, 979.0], [24.0, 979.0], [24.1, 979.0], [24.2, 979.0], [24.3, 979.0], [24.4, 979.0], [24.5, 979.0], [24.6, 979.0], [24.7, 979.0], [24.8, 979.0], [24.9, 979.0], [25.0, 979.0], [25.1, 979.0], [25.2, 979.0], [25.3, 979.0], [25.4, 979.0], [25.5, 979.0], [25.6, 979.0], [25.7, 979.0], [25.8, 979.0], [25.9, 979.0], [26.0, 979.0], [26.1, 979.0], [26.2, 979.0], [26.3, 979.0], [26.4, 979.0], [26.5, 979.0], [26.6, 979.0], [26.7, 979.0], [26.8, 979.0], [26.9, 979.0], [27.0, 979.0], [27.1, 979.0], [27.2, 979.0], [27.3, 979.0], [27.4, 979.0], [27.5, 979.0], [27.6, 979.0], [27.7, 979.0], [27.8, 979.0], [27.9, 979.0], [28.0, 979.0], [28.1, 979.0], [28.2, 979.0], [28.3, 979.0], [28.4, 979.0], [28.5, 979.0], [28.6, 979.0], [28.7, 979.0], [28.8, 979.0], [28.9, 979.0], [29.0, 979.0], [29.1, 979.0], [29.2, 979.0], [29.3, 979.0], [29.4, 979.0], [29.5, 979.0], [29.6, 979.0], [29.7, 979.0], [29.8, 979.0], [29.9, 979.0], [30.0, 979.0], [30.1, 979.0], [30.2, 979.0], [30.3, 979.0], [30.4, 979.0], [30.5, 979.0], [30.6, 979.0], [30.7, 979.0], [30.8, 979.0], [30.9, 979.0], [31.0, 979.0], [31.1, 979.0], [31.2, 979.0], [31.3, 979.0], [31.4, 979.0], [31.5, 979.0], [31.6, 979.0], [31.7, 979.0], [31.8, 979.0], [31.9, 979.0], [32.0, 979.0], [32.1, 979.0], [32.2, 979.0], [32.3, 979.0], [32.4, 979.0], [32.5, 979.0], [32.6, 979.0], [32.7, 979.0], [32.8, 979.0], [32.9, 979.0], [33.0, 979.0], [33.1, 979.0], [33.2, 979.0], [33.3, 979.0], [33.4, 979.0], [33.5, 979.0], [33.6, 979.0], [33.7, 979.0], [33.8, 979.0], [33.9, 979.0], [34.0, 979.0], [34.1, 979.0], [34.2, 979.0], [34.3, 979.0], [34.4, 979.0], [34.5, 979.0], [34.6, 979.0], [34.7, 979.0], [34.8, 979.0], [34.9, 979.0], [35.0, 979.0], [35.1, 979.0], [35.2, 979.0], [35.3, 979.0], [35.4, 979.0], [35.5, 979.0], [35.6, 979.0], [35.7, 979.0], [35.8, 979.0], [35.9, 979.0], [36.0, 979.0], [36.1, 979.0], [36.2, 979.0], [36.3, 979.0], [36.4, 979.0], [36.5, 979.0], [36.6, 979.0], [36.7, 979.0], [36.8, 979.0], [36.9, 979.0], [37.0, 979.0], [37.1, 979.0], [37.2, 979.0], [37.3, 979.0], [37.4, 979.0], [37.5, 979.0], [37.6, 979.0], [37.7, 979.0], [37.8, 979.0], [37.9, 979.0], [38.0, 979.0], [38.1, 979.0], [38.2, 979.0], [38.3, 979.0], [38.4, 979.0], [38.5, 979.0], [38.6, 979.0], [38.7, 979.0], [38.8, 979.0], [38.9, 979.0], [39.0, 979.0], [39.1, 979.0], [39.2, 979.0], [39.3, 979.0], [39.4, 979.0], [39.5, 979.0], [39.6, 979.0], [39.7, 979.0], [39.8, 979.0], [39.9, 979.0], [40.0, 979.0], [40.1, 979.0], [40.2, 979.0], [40.3, 979.0], [40.4, 979.0], [40.5, 979.0], [40.6, 979.0], [40.7, 979.0], [40.8, 979.0], [40.9, 979.0], [41.0, 979.0], [41.1, 979.0], [41.2, 979.0], [41.3, 979.0], [41.4, 979.0], [41.5, 979.0], [41.6, 979.0], [41.7, 979.0], [41.8, 979.0], [41.9, 979.0], [42.0, 979.0], [42.1, 979.0], [42.2, 979.0], [42.3, 979.0], [42.4, 979.0], [42.5, 979.0], [42.6, 979.0], [42.7, 979.0], [42.8, 979.0], [42.9, 979.0], [43.0, 979.0], [43.1, 979.0], [43.2, 979.0], [43.3, 979.0], [43.4, 979.0], [43.5, 979.0], [43.6, 979.0], [43.7, 979.0], [43.8, 979.0], [43.9, 979.0], [44.0, 979.0], [44.1, 979.0], [44.2, 979.0], [44.3, 979.0], [44.4, 979.0], [44.5, 979.0], [44.6, 979.0], [44.7, 979.0], [44.8, 979.0], [44.9, 979.0], [45.0, 979.0], [45.1, 979.0], [45.2, 979.0], [45.3, 979.0], [45.4, 979.0], [45.5, 979.0], [45.6, 979.0], [45.7, 979.0], [45.8, 979.0], [45.9, 979.0], [46.0, 979.0], [46.1, 979.0], [46.2, 979.0], [46.3, 979.0], [46.4, 979.0], [46.5, 979.0], [46.6, 979.0], [46.7, 979.0], [46.8, 979.0], [46.9, 979.0], [47.0, 979.0], [47.1, 979.0], [47.2, 979.0], [47.3, 979.0], [47.4, 979.0], [47.5, 979.0], [47.6, 979.0], [47.7, 979.0], [47.8, 979.0], [47.9, 979.0], [48.0, 979.0], [48.1, 979.0], [48.2, 979.0], [48.3, 979.0], [48.4, 979.0], [48.5, 979.0], [48.6, 979.0], [48.7, 979.0], [48.8, 979.0], [48.9, 979.0], [49.0, 979.0], [49.1, 979.0], [49.2, 979.0], [49.3, 979.0], [49.4, 979.0], [49.5, 979.0], [49.6, 979.0], [49.7, 979.0], [49.8, 979.0], [49.9, 979.0], [50.0, 979.0], [50.1, 979.0], [50.2, 979.0], [50.3, 979.0], [50.4, 979.0], [50.5, 979.0], [50.6, 979.0], [50.7, 979.0], [50.8, 979.0], [50.9, 979.0], [51.0, 979.0], [51.1, 979.0], [51.2, 979.0], [51.3, 979.0], [51.4, 979.0], [51.5, 979.0], [51.6, 979.0], [51.7, 979.0], [51.8, 979.0], [51.9, 979.0], [52.0, 979.0], [52.1, 979.0], [52.2, 979.0], [52.3, 979.0], [52.4, 979.0], [52.5, 979.0], [52.6, 979.0], [52.7, 979.0], [52.8, 979.0], [52.9, 979.0], [53.0, 979.0], [53.1, 979.0], [53.2, 979.0], [53.3, 979.0], [53.4, 979.0], [53.5, 979.0], [53.6, 979.0], [53.7, 979.0], [53.8, 979.0], [53.9, 979.0], [54.0, 979.0], [54.1, 979.0], [54.2, 979.0], [54.3, 979.0], [54.4, 979.0], [54.5, 979.0], [54.6, 979.0], [54.7, 979.0], [54.8, 979.0], [54.9, 979.0], [55.0, 979.0], [55.1, 979.0], [55.2, 979.0], [55.3, 979.0], [55.4, 979.0], [55.5, 979.0], [55.6, 979.0], [55.7, 979.0], [55.8, 979.0], [55.9, 979.0], [56.0, 979.0], [56.1, 979.0], [56.2, 979.0], [56.3, 979.0], [56.4, 979.0], [56.5, 979.0], [56.6, 979.0], [56.7, 979.0], [56.8, 979.0], [56.9, 979.0], [57.0, 979.0], [57.1, 979.0], [57.2, 979.0], [57.3, 979.0], [57.4, 979.0], [57.5, 979.0], [57.6, 979.0], [57.7, 979.0], [57.8, 979.0], [57.9, 979.0], [58.0, 979.0], [58.1, 979.0], [58.2, 979.0], [58.3, 979.0], [58.4, 979.0], [58.5, 979.0], [58.6, 979.0], [58.7, 979.0], [58.8, 979.0], [58.9, 979.0], [59.0, 979.0], [59.1, 979.0], [59.2, 979.0], [59.3, 979.0], [59.4, 979.0], [59.5, 979.0], [59.6, 979.0], [59.7, 979.0], [59.8, 979.0], [59.9, 979.0], [60.0, 979.0], [60.1, 979.0], [60.2, 979.0], [60.3, 979.0], [60.4, 979.0], [60.5, 979.0], [60.6, 979.0], [60.7, 979.0], [60.8, 979.0], [60.9, 979.0], [61.0, 979.0], [61.1, 979.0], [61.2, 979.0], [61.3, 979.0], [61.4, 979.0], [61.5, 979.0], [61.6, 979.0], [61.7, 979.0], [61.8, 979.0], [61.9, 979.0], [62.0, 979.0], [62.1, 979.0], [62.2, 979.0], [62.3, 979.0], [62.4, 979.0], [62.5, 979.0], [62.6, 979.0], [62.7, 979.0], [62.8, 979.0], [62.9, 979.0], [63.0, 979.0], [63.1, 979.0], [63.2, 979.0], [63.3, 979.0], [63.4, 979.0], [63.5, 979.0], [63.6, 979.0], [63.7, 979.0], [63.8, 979.0], [63.9, 979.0], [64.0, 979.0], [64.1, 979.0], [64.2, 979.0], [64.3, 979.0], [64.4, 979.0], [64.5, 979.0], [64.6, 979.0], [64.7, 979.0], [64.8, 979.0], [64.9, 979.0], [65.0, 979.0], [65.1, 979.0], [65.2, 979.0], [65.3, 979.0], [65.4, 979.0], [65.5, 979.0], [65.6, 979.0], [65.7, 979.0], [65.8, 979.0], [65.9, 979.0], [66.0, 979.0], [66.1, 979.0], [66.2, 979.0], [66.3, 979.0], [66.4, 979.0], [66.5, 979.0], [66.6, 979.0], [66.7, 979.0], [66.8, 979.0], [66.9, 979.0], [67.0, 979.0], [67.1, 979.0], [67.2, 979.0], [67.3, 979.0], [67.4, 979.0], [67.5, 979.0], [67.6, 979.0], [67.7, 979.0], [67.8, 979.0], [67.9, 979.0], [68.0, 979.0], [68.1, 979.0], [68.2, 979.0], [68.3, 979.0], [68.4, 979.0], [68.5, 979.0], [68.6, 979.0], [68.7, 979.0], [68.8, 979.0], [68.9, 979.0], [69.0, 979.0], [69.1, 979.0], [69.2, 979.0], [69.3, 979.0], [69.4, 979.0], [69.5, 979.0], [69.6, 979.0], [69.7, 979.0], [69.8, 979.0], [69.9, 979.0], [70.0, 979.0], [70.1, 979.0], [70.2, 979.0], [70.3, 979.0], [70.4, 979.0], [70.5, 979.0], [70.6, 979.0], [70.7, 979.0], [70.8, 979.0], [70.9, 979.0], [71.0, 979.0], [71.1, 979.0], [71.2, 979.0], [71.3, 979.0], [71.4, 979.0], [71.5, 979.0], [71.6, 979.0], [71.7, 979.0], [71.8, 979.0], [71.9, 979.0], [72.0, 979.0], [72.1, 979.0], [72.2, 979.0], [72.3, 979.0], [72.4, 979.0], [72.5, 979.0], [72.6, 979.0], [72.7, 979.0], [72.8, 979.0], [72.9, 979.0], [73.0, 979.0], [73.1, 979.0], [73.2, 979.0], [73.3, 979.0], [73.4, 979.0], [73.5, 979.0], [73.6, 979.0], [73.7, 979.0], [73.8, 979.0], [73.9, 979.0], [74.0, 979.0], [74.1, 979.0], [74.2, 979.0], [74.3, 979.0], [74.4, 979.0], [74.5, 979.0], [74.6, 979.0], [74.7, 979.0], [74.8, 979.0], [74.9, 979.0], [75.0, 979.0], [75.1, 979.0], [75.2, 979.0], [75.3, 979.0], [75.4, 979.0], [75.5, 979.0], [75.6, 979.0], [75.7, 979.0], [75.8, 979.0], [75.9, 979.0], [76.0, 979.0], [76.1, 979.0], [76.2, 979.0], [76.3, 979.0], [76.4, 979.0], [76.5, 979.0], [76.6, 979.0], [76.7, 979.0], [76.8, 979.0], [76.9, 979.0], [77.0, 979.0], [77.1, 979.0], [77.2, 979.0], [77.3, 979.0], [77.4, 979.0], [77.5, 979.0], [77.6, 979.0], [77.7, 979.0], [77.8, 979.0], [77.9, 979.0], [78.0, 979.0], [78.1, 979.0], [78.2, 979.0], [78.3, 979.0], [78.4, 979.0], [78.5, 979.0], [78.6, 979.0], [78.7, 979.0], [78.8, 979.0], [78.9, 979.0], [79.0, 979.0], [79.1, 979.0], [79.2, 979.0], [79.3, 979.0], [79.4, 979.0], [79.5, 979.0], [79.6, 979.0], [79.7, 979.0], [79.8, 979.0], [79.9, 979.0], [80.0, 979.0], [80.1, 979.0], [80.2, 979.0], [80.3, 979.0], [80.4, 979.0], [80.5, 979.0], [80.6, 979.0], [80.7, 979.0], [80.8, 979.0], [80.9, 979.0], [81.0, 979.0], [81.1, 979.0], [81.2, 979.0], [81.3, 979.0], [81.4, 979.0], [81.5, 979.0], [81.6, 979.0], [81.7, 979.0], [81.8, 979.0], [81.9, 979.0], [82.0, 979.0], [82.1, 979.0], [82.2, 979.0], [82.3, 979.0], [82.4, 979.0], [82.5, 979.0], [82.6, 979.0], [82.7, 979.0], [82.8, 979.0], [82.9, 979.0], [83.0, 979.0], [83.1, 979.0], [83.2, 979.0], [83.3, 979.0], [83.4, 979.0], [83.5, 979.0], [83.6, 979.0], [83.7, 979.0], [83.8, 979.0], [83.9, 979.0], [84.0, 979.0], [84.1, 979.0], [84.2, 979.0], [84.3, 979.0], [84.4, 979.0], [84.5, 979.0], [84.6, 979.0], [84.7, 979.0], [84.8, 979.0], [84.9, 979.0], [85.0, 979.0], [85.1, 979.0], [85.2, 979.0], [85.3, 979.0], [85.4, 979.0], [85.5, 979.0], [85.6, 979.0], [85.7, 979.0], [85.8, 979.0], [85.9, 979.0], [86.0, 979.0], [86.1, 979.0], [86.2, 979.0], [86.3, 979.0], [86.4, 979.0], [86.5, 979.0], [86.6, 979.0], [86.7, 979.0], [86.8, 979.0], [86.9, 979.0], [87.0, 979.0], [87.1, 979.0], [87.2, 979.0], [87.3, 979.0], [87.4, 979.0], [87.5, 979.0], [87.6, 979.0], [87.7, 979.0], [87.8, 979.0], [87.9, 979.0], [88.0, 979.0], [88.1, 979.0], [88.2, 979.0], [88.3, 979.0], [88.4, 979.0], [88.5, 979.0], [88.6, 979.0], [88.7, 979.0], [88.8, 979.0], [88.9, 979.0], [89.0, 979.0], [89.1, 979.0], [89.2, 979.0], [89.3, 979.0], [89.4, 979.0], [89.5, 979.0], [89.6, 979.0], [89.7, 979.0], [89.8, 979.0], [89.9, 979.0], [90.0, 979.0], [90.1, 979.0], [90.2, 979.0], [90.3, 979.0], [90.4, 979.0], [90.5, 979.0], [90.6, 979.0], [90.7, 979.0], [90.8, 979.0], [90.9, 979.0], [91.0, 979.0], [91.1, 979.0], [91.2, 979.0], [91.3, 979.0], [91.4, 979.0], [91.5, 979.0], [91.6, 979.0], [91.7, 979.0], [91.8, 979.0], [91.9, 979.0], [92.0, 979.0], [92.1, 979.0], [92.2, 979.0], [92.3, 979.0], [92.4, 979.0], [92.5, 979.0], [92.6, 979.0], [92.7, 979.0], [92.8, 979.0], [92.9, 979.0], [93.0, 979.0], [93.1, 979.0], [93.2, 979.0], [93.3, 979.0], [93.4, 979.0], [93.5, 979.0], [93.6, 979.0], [93.7, 979.0], [93.8, 979.0], [93.9, 979.0], [94.0, 979.0], [94.1, 979.0], [94.2, 979.0], [94.3, 979.0], [94.4, 979.0], [94.5, 979.0], [94.6, 979.0], [94.7, 979.0], [94.8, 979.0], [94.9, 979.0], [95.0, 979.0], [95.1, 979.0], [95.2, 979.0], [95.3, 979.0], [95.4, 979.0], [95.5, 979.0], [95.6, 979.0], [95.7, 979.0], [95.8, 979.0], [95.9, 979.0], [96.0, 979.0], [96.1, 979.0], [96.2, 979.0], [96.3, 979.0], [96.4, 979.0], [96.5, 979.0], [96.6, 979.0], [96.7, 979.0], [96.8, 979.0], [96.9, 979.0], [97.0, 979.0], [97.1, 979.0], [97.2, 979.0], [97.3, 979.0], [97.4, 979.0], [97.5, 979.0], [97.6, 979.0], [97.7, 979.0], [97.8, 979.0], [97.9, 979.0], [98.0, 979.0], [98.1, 979.0], [98.2, 979.0], [98.3, 979.0], [98.4, 979.0], [98.5, 979.0], [98.6, 979.0], [98.7, 979.0], [98.8, 979.0], [98.9, 979.0], [99.0, 979.0], [99.1, 979.0], [99.2, 979.0], [99.3, 979.0], [99.4, 979.0], [99.5, 979.0], [99.6, 979.0], [99.7, 979.0], [99.8, 979.0], [99.9, 979.0]], "isOverall": false, "label": "DependencyPost", "isController": false}, {"data": [[0.0, 583.0], [0.1, 622.0], [0.2, 661.0], [0.3, 696.0], [0.4, 721.0], [0.5, 739.0], [0.6, 756.0], [0.7, 792.0], [0.8, 819.0], [0.9, 845.0], [1.0, 882.0], [1.1, 913.0], [1.2, 950.0], [1.3, 1006.0], [1.4, 1010.0], [1.5, 1012.0], [1.6, 1015.0], [1.7, 1017.0], [1.8, 1027.0], [1.9, 1033.0], [2.0, 1039.0], [2.1, 1046.0], [2.2, 1061.0], [2.3, 1068.0], [2.4, 1082.0], [2.5, 1104.0], [2.6, 1119.0], [2.7, 1162.0], [2.8, 1189.0], [2.9, 1220.0], [3.0, 1224.0], [3.1, 1236.0], [3.2, 1240.0], [3.3, 1253.0], [3.4, 1260.0], [3.5, 1283.0], [3.6, 1292.0], [3.7, 1296.0], [3.8, 1334.0], [3.9, 1350.0], [4.0, 1352.0], [4.1, 1374.0], [4.2, 1389.0], [4.3, 1395.0], [4.4, 1419.0], [4.5, 1468.0], [4.6, 1492.0], [4.7, 1538.0], [4.8, 1545.0], [4.9, 1553.0], [5.0, 1568.0], [5.1, 1585.0], [5.2, 1611.0], [5.3, 1664.0], [5.4, 1692.0], [5.5, 1716.0], [5.6, 1724.0], [5.7, 1730.0], [5.8, 1749.0], [5.9, 1791.0], [6.0, 1803.0], [6.1, 1813.0], [6.2, 1817.0], [6.3, 1852.0], [6.4, 1873.0], [6.5, 1891.0], [6.6, 1910.0], [6.7, 1929.0], [6.8, 1956.0], [6.9, 1972.0], [7.0, 1976.0], [7.1, 1981.0], [7.2, 1986.0], [7.3, 2008.0], [7.4, 2027.0], [7.5, 2050.0], [7.6, 2063.0], [7.7, 2099.0], [7.8, 2131.0], [7.9, 2138.0], [8.0, 2146.0], [8.1, 2162.0], [8.2, 2164.0], [8.3, 2223.0], [8.4, 2261.0], [8.5, 2287.0], [8.6, 2302.0], [8.7, 2312.0], [8.8, 2342.0], [8.9, 2350.0], [9.0, 2357.0], [9.1, 2370.0], [9.2, 2403.0], [9.3, 2414.0], [9.4, 2451.0], [9.5, 2475.0], [9.6, 2487.0], [9.7, 2488.0], [9.8, 2492.0], [9.9, 2496.0], [10.0, 2546.0], [10.1, 2556.0], [10.2, 2573.0], [10.3, 2590.0], [10.4, 2613.0], [10.5, 2622.0], [10.6, 2637.0], [10.7, 2663.0], [10.8, 2671.0], [10.9, 2684.0], [11.0, 2706.0], [11.1, 2711.0], [11.2, 2724.0], [11.3, 2737.0], [11.4, 2747.0], [11.5, 2760.0], [11.6, 2790.0], [11.7, 2799.0], [11.8, 2814.0], [11.9, 2828.0], [12.0, 2840.0], [12.1, 2847.0], [12.2, 2855.0], [12.3, 2866.0], [12.4, 2881.0], [12.5, 2898.0], [12.6, 2902.0], [12.7, 2902.0], [12.8, 2922.0], [12.9, 2931.0], [13.0, 2940.0], [13.1, 2962.0], [13.2, 2977.0], [13.3, 2980.0], [13.4, 2994.0], [13.5, 2997.0], [13.6, 3007.0], [13.7, 3011.0], [13.8, 3057.0], [13.9, 3058.0], [14.0, 3074.0], [14.1, 3083.0], [14.2, 3100.0], [14.3, 3103.0], [14.4, 3111.0], [14.5, 3115.0], [14.6, 3126.0], [14.7, 3135.0], [14.8, 3146.0], [14.9, 3160.0], [15.0, 3173.0], [15.1, 3183.0], [15.2, 3217.0], [15.3, 3225.0], [15.4, 3251.0], [15.5, 3264.0], [15.6, 3270.0], [15.7, 3276.0], [15.8, 3285.0], [15.9, 3294.0], [16.0, 3322.0], [16.1, 3346.0], [16.2, 3348.0], [16.3, 3350.0], [16.4, 3376.0], [16.5, 3386.0], [16.6, 3420.0], [16.7, 3424.0], [16.8, 3458.0], [16.9, 3474.0], [17.0, 3491.0], [17.1, 3514.0], [17.2, 3521.0], [17.3, 3537.0], [17.4, 3568.0], [17.5, 3572.0], [17.6, 3584.0], [17.7, 3596.0], [17.8, 3619.0], [17.9, 3623.0], [18.0, 3632.0], [18.1, 3634.0], [18.2, 3645.0], [18.3, 3653.0], [18.4, 3664.0], [18.5, 3674.0], [18.6, 3699.0], [18.7, 3707.0], [18.8, 3725.0], [18.9, 3740.0], [19.0, 3750.0], [19.1, 3751.0], [19.2, 3763.0], [19.3, 3770.0], [19.4, 3772.0], [19.5, 3789.0], [19.6, 3813.0], [19.7, 3819.0], [19.8, 3834.0], [19.9, 3843.0], [20.0, 3858.0], [20.1, 3864.0], [20.2, 3877.0], [20.3, 3894.0], [20.4, 3917.0], [20.5, 3918.0], [20.6, 3933.0], [20.7, 3942.0], [20.8, 3954.0], [20.9, 3963.0], [21.0, 3977.0], [21.1, 3978.0], [21.2, 3998.0], [21.3, 4018.0], [21.4, 4032.0], [21.5, 4044.0], [21.6, 4053.0], [21.7, 4059.0], [21.8, 4084.0], [21.9, 4089.0], [22.0, 4101.0], [22.1, 4102.0], [22.2, 4110.0], [22.3, 4115.0], [22.4, 4139.0], [22.5, 4140.0], [22.6, 4146.0], [22.7, 4158.0], [22.8, 4168.0], [22.9, 4178.0], [23.0, 4188.0], [23.1, 4191.0], [23.2, 4194.0], [23.3, 4200.0], [23.4, 4215.0], [23.5, 4223.0], [23.6, 4228.0], [23.7, 4228.0], [23.8, 4236.0], [23.9, 4248.0], [24.0, 4263.0], [24.1, 4270.0], [24.2, 4279.0], [24.3, 4286.0], [24.4, 4304.0], [24.5, 4307.0], [24.6, 4324.0], [24.7, 4328.0], [24.8, 4337.0], [24.9, 4353.0], [25.0, 4376.0], [25.1, 4378.0], [25.2, 4392.0], [25.3, 4396.0], [25.4, 4401.0], [25.5, 4414.0], [25.6, 4424.0], [25.7, 4436.0], [25.8, 4450.0], [25.9, 4450.0], [26.0, 4466.0], [26.1, 4469.0], [26.2, 4481.0], [26.3, 4482.0], [26.4, 4494.0], [26.5, 4504.0], [26.6, 4522.0], [26.7, 4530.0], [26.8, 4532.0], [26.9, 4540.0], [27.0, 4560.0], [27.1, 4566.0], [27.2, 4580.0], [27.3, 4581.0], [27.4, 4597.0], [27.5, 4601.0], [27.6, 4608.0], [27.7, 4617.0], [27.8, 4630.0], [27.9, 4637.0], [28.0, 4648.0], [28.1, 4652.0], [28.2, 4658.0], [28.3, 4675.0], [28.4, 4680.0], [28.5, 4696.0], [28.6, 4720.0], [28.7, 4731.0], [28.8, 4748.0], [28.9, 4757.0], [29.0, 4763.0], [29.1, 4768.0], [29.2, 4774.0], [29.3, 4781.0], [29.4, 4795.0], [29.5, 4800.0], [29.6, 4811.0], [29.7, 4839.0], [29.8, 4847.0], [29.9, 4859.0], [30.0, 4865.0], [30.1, 4867.0], [30.2, 4890.0], [30.3, 4893.0], [30.4, 4915.0], [30.5, 4917.0], [30.6, 4926.0], [30.7, 4930.0], [30.8, 4944.0], [30.9, 4949.0], [31.0, 4973.0], [31.1, 4976.0], [31.2, 4981.0], [31.3, 4990.0], [31.4, 4997.0], [31.5, 5004.0], [31.6, 5013.0], [31.7, 5019.0], [31.8, 5035.0], [31.9, 5046.0], [32.0, 5059.0], [32.1, 5070.0], [32.2, 5106.0], [32.3, 5114.0], [32.4, 5126.0], [32.5, 5128.0], [32.6, 5135.0], [32.7, 5141.0], [32.8, 5155.0], [32.9, 5177.0], [33.0, 5189.0], [33.1, 5190.0], [33.2, 5209.0], [33.3, 5213.0], [33.4, 5228.0], [33.5, 5231.0], [33.6, 5237.0], [33.7, 5246.0], [33.8, 5259.0], [33.9, 5264.0], [34.0, 5275.0], [34.1, 5278.0], [34.2, 5284.0], [34.3, 5289.0], [34.4, 5297.0], [34.5, 5306.0], [34.6, 5323.0], [34.7, 5330.0], [34.8, 5333.0], [34.9, 5335.0], [35.0, 5351.0], [35.1, 5356.0], [35.2, 5362.0], [35.3, 5370.0], [35.4, 5383.0], [35.5, 5384.0], [35.6, 5395.0], [35.7, 5402.0], [35.8, 5413.0], [35.9, 5422.0], [36.0, 5440.0], [36.1, 5444.0], [36.2, 5448.0], [36.3, 5450.0], [36.4, 5458.0], [36.5, 5462.0], [36.6, 5469.0], [36.7, 5473.0], [36.8, 5483.0], [36.9, 5488.0], [37.0, 5495.0], [37.1, 5499.0], [37.2, 5503.0], [37.3, 5510.0], [37.4, 5515.0], [37.5, 5526.0], [37.6, 5535.0], [37.7, 5545.0], [37.8, 5553.0], [37.9, 5578.0], [38.0, 5588.0], [38.1, 5592.0], [38.2, 5603.0], [38.3, 5609.0], [38.4, 5614.0], [38.5, 5622.0], [38.6, 5632.0], [38.7, 5635.0], [38.8, 5644.0], [38.9, 5650.0], [39.0, 5669.0], [39.1, 5673.0], [39.2, 5681.0], [39.3, 5681.0], [39.4, 5706.0], [39.5, 5710.0], [39.6, 5721.0], [39.7, 5731.0], [39.8, 5745.0], [39.9, 5756.0], [40.0, 5761.0], [40.1, 5764.0], [40.2, 5777.0], [40.3, 5783.0], [40.4, 5795.0], [40.5, 5808.0], [40.6, 5821.0], [40.7, 5834.0], [40.8, 5866.0], [40.9, 5870.0], [41.0, 5878.0], [41.1, 5886.0], [41.2, 5891.0], [41.3, 5905.0], [41.4, 5910.0], [41.5, 5928.0], [41.6, 5939.0], [41.7, 5945.0], [41.8, 5963.0], [41.9, 5979.0], [42.0, 5985.0], [42.1, 5990.0], [42.2, 5999.0], [42.3, 6007.0], [42.4, 6024.0], [42.5, 6031.0], [42.6, 6034.0], [42.7, 6046.0], [42.8, 6051.0], [42.9, 6060.0], [43.0, 6078.0], [43.1, 6086.0], [43.2, 6089.0], [43.3, 6103.0], [43.4, 6108.0], [43.5, 6110.0], [43.6, 6115.0], [43.7, 6128.0], [43.8, 6132.0], [43.9, 6138.0], [44.0, 6144.0], [44.1, 6145.0], [44.2, 6150.0], [44.3, 6152.0], [44.4, 6161.0], [44.5, 6167.0], [44.6, 6173.0], [44.7, 6186.0], [44.8, 6191.0], [44.9, 6194.0], [45.0, 6199.0], [45.1, 6206.0], [45.2, 6211.0], [45.3, 6225.0], [45.4, 6233.0], [45.5, 6240.0], [45.6, 6245.0], [45.7, 6252.0], [45.8, 6258.0], [45.9, 6264.0], [46.0, 6279.0], [46.1, 6285.0], [46.2, 6295.0], [46.3, 6300.0], [46.4, 6313.0], [46.5, 6318.0], [46.6, 6335.0], [46.7, 6354.0], [46.8, 6358.0], [46.9, 6364.0], [47.0, 6379.0], [47.1, 6391.0], [47.2, 6407.0], [47.3, 6409.0], [47.4, 6415.0], [47.5, 6420.0], [47.6, 6428.0], [47.7, 6433.0], [47.8, 6444.0], [47.9, 6459.0], [48.0, 6472.0], [48.1, 6474.0], [48.2, 6491.0], [48.3, 6499.0], [48.4, 6516.0], [48.5, 6522.0], [48.6, 6534.0], [48.7, 6545.0], [48.8, 6556.0], [48.9, 6562.0], [49.0, 6575.0], [49.1, 6581.0], [49.2, 6595.0], [49.3, 6609.0], [49.4, 6618.0], [49.5, 6626.0], [49.6, 6637.0], [49.7, 6638.0], [49.8, 6657.0], [49.9, 6662.0], [50.0, 6674.0], [50.1, 6681.0], [50.2, 6694.0], [50.3, 6709.0], [50.4, 6718.0], [50.5, 6720.0], [50.6, 6731.0], [50.7, 6741.0], [50.8, 6750.0], [50.9, 6753.0], [51.0, 6761.0], [51.1, 6774.0], [51.2, 6778.0], [51.3, 6784.0], [51.4, 6794.0], [51.5, 6797.0], [51.6, 6812.0], [51.7, 6815.0], [51.8, 6819.0], [51.9, 6822.0], [52.0, 6830.0], [52.1, 6831.0], [52.2, 6835.0], [52.3, 6839.0], [52.4, 6844.0], [52.5, 6855.0], [52.6, 6862.0], [52.7, 6873.0], [52.8, 6881.0], [52.9, 6898.0], [53.0, 6922.0], [53.1, 6923.0], [53.2, 6931.0], [53.3, 6933.0], [53.4, 6949.0], [53.5, 6957.0], [53.6, 6962.0], [53.7, 6967.0], [53.8, 6979.0], [53.9, 6982.0], [54.0, 7016.0], [54.1, 7023.0], [54.2, 7032.0], [54.3, 7041.0], [54.4, 7047.0], [54.5, 7053.0], [54.6, 7072.0], [54.7, 7096.0], [54.8, 7102.0], [54.9, 7112.0], [55.0, 7132.0], [55.1, 7159.0], [55.2, 7166.0], [55.3, 7174.0], [55.4, 7192.0], [55.5, 7198.0], [55.6, 7201.0], [55.7, 7206.0], [55.8, 7211.0], [55.9, 7217.0], [56.0, 7229.0], [56.1, 7230.0], [56.2, 7232.0], [56.3, 7233.0], [56.4, 7254.0], [56.5, 7265.0], [56.6, 7278.0], [56.7, 7289.0], [56.8, 7303.0], [56.9, 7318.0], [57.0, 7323.0], [57.1, 7329.0], [57.2, 7337.0], [57.3, 7347.0], [57.4, 7362.0], [57.5, 7377.0], [57.6, 7389.0], [57.7, 7398.0], [57.8, 7419.0], [57.9, 7421.0], [58.0, 7444.0], [58.1, 7447.0], [58.2, 7462.0], [58.3, 7490.0], [58.4, 7497.0], [58.5, 7510.0], [58.6, 7534.0], [58.7, 7549.0], [58.8, 7557.0], [58.9, 7560.0], [59.0, 7566.0], [59.1, 7570.0], [59.2, 7572.0], [59.3, 7579.0], [59.4, 7592.0], [59.5, 7599.0], [59.6, 7609.0], [59.7, 7622.0], [59.8, 7628.0], [59.9, 7642.0], [60.0, 7658.0], [60.1, 7672.0], [60.2, 7682.0], [60.3, 7685.0], [60.4, 7695.0], [60.5, 7703.0], [60.6, 7714.0], [60.7, 7719.0], [60.8, 7725.0], [60.9, 7729.0], [61.0, 7748.0], [61.1, 7760.0], [61.2, 7767.0], [61.3, 7786.0], [61.4, 7793.0], [61.5, 7794.0], [61.6, 7809.0], [61.7, 7812.0], [61.8, 7844.0], [61.9, 7859.0], [62.0, 7881.0], [62.1, 7892.0], [62.2, 7902.0], [62.3, 7912.0], [62.4, 7920.0], [62.5, 7932.0], [62.6, 7944.0], [62.7, 7949.0], [62.8, 7953.0], [62.9, 7954.0], [63.0, 7962.0], [63.1, 7971.0], [63.2, 7988.0], [63.3, 7999.0], [63.4, 8017.0], [63.5, 8033.0], [63.6, 8049.0], [63.7, 8060.0], [63.8, 8072.0], [63.9, 8079.0], [64.0, 8095.0], [64.1, 8103.0], [64.2, 8110.0], [64.3, 8114.0], [64.4, 8131.0], [64.5, 8135.0], [64.6, 8154.0], [64.7, 8159.0], [64.8, 8168.0], [64.9, 8174.0], [65.0, 8191.0], [65.1, 8198.0], [65.2, 8229.0], [65.3, 8237.0], [65.4, 8243.0], [65.5, 8247.0], [65.6, 8249.0], [65.7, 8255.0], [65.8, 8271.0], [65.9, 8289.0], [66.0, 8302.0], [66.1, 8315.0], [66.2, 8330.0], [66.3, 8336.0], [66.4, 8345.0], [66.5, 8348.0], [66.6, 8363.0], [66.7, 8368.0], [66.8, 8382.0], [66.9, 8391.0], [67.0, 8397.0], [67.1, 8401.0], [67.2, 8412.0], [67.3, 8421.0], [67.4, 8439.0], [67.5, 8443.0], [67.6, 8446.0], [67.7, 8452.0], [67.8, 8464.0], [67.9, 8465.0], [68.0, 8474.0], [68.1, 8498.0], [68.2, 8512.0], [68.3, 8516.0], [68.4, 8528.0], [68.5, 8536.0], [68.6, 8549.0], [68.7, 8550.0], [68.8, 8554.0], [68.9, 8563.0], [69.0, 8576.0], [69.1, 8633.0], [69.2, 8635.0], [69.3, 8638.0], [69.4, 8647.0], [69.5, 8651.0], [69.6, 8660.0], [69.7, 8662.0], [69.8, 8669.0], [69.9, 8669.0], [70.0, 8680.0], [70.1, 8683.0], [70.2, 8695.0], [70.3, 8697.0], [70.4, 8701.0], [70.5, 8710.0], [70.6, 8716.0], [70.7, 8724.0], [70.8, 8735.0], [70.9, 8739.0], [71.0, 8747.0], [71.1, 8750.0], [71.2, 8766.0], [71.3, 8785.0], [71.4, 8799.0], [71.5, 8810.0], [71.6, 8818.0], [71.7, 8825.0], [71.8, 8844.0], [71.9, 8868.0], [72.0, 8878.0], [72.1, 8893.0], [72.2, 8896.0], [72.3, 8917.0], [72.4, 8930.0], [72.5, 8932.0], [72.6, 8949.0], [72.7, 8979.0], [72.8, 8994.0], [72.9, 8995.0], [73.0, 9027.0], [73.1, 9045.0], [73.2, 9063.0], [73.3, 9066.0], [73.4, 9081.0], [73.5, 9085.0], [73.6, 9089.0], [73.7, 9096.0], [73.8, 9102.0], [73.9, 9106.0], [74.0, 9114.0], [74.1, 9129.0], [74.2, 9133.0], [74.3, 9141.0], [74.4, 9146.0], [74.5, 9165.0], [74.6, 9170.0], [74.7, 9195.0], [74.8, 9197.0], [74.9, 9209.0], [75.0, 9217.0], [75.1, 9222.0], [75.2, 9224.0], [75.3, 9244.0], [75.4, 9247.0], [75.5, 9254.0], [75.6, 9255.0], [75.7, 9262.0], [75.8, 9268.0], [75.9, 9273.0], [76.0, 9282.0], [76.1, 9292.0], [76.2, 9303.0], [76.3, 9317.0], [76.4, 9324.0], [76.5, 9342.0], [76.6, 9343.0], [76.7, 9371.0], [76.8, 9378.0], [76.9, 9390.0], [77.0, 9407.0], [77.1, 9411.0], [77.2, 9425.0], [77.3, 9449.0], [77.4, 9457.0], [77.5, 9465.0], [77.6, 9471.0], [77.7, 9485.0], [77.8, 9490.0], [77.9, 9501.0], [78.0, 9513.0], [78.1, 9521.0], [78.2, 9532.0], [78.3, 9543.0], [78.4, 9559.0], [78.5, 9563.0], [78.6, 9573.0], [78.7, 9582.0], [78.8, 9593.0], [78.9, 9603.0], [79.0, 9606.0], [79.1, 9630.0], [79.2, 9644.0], [79.3, 9666.0], [79.4, 9668.0], [79.5, 9683.0], [79.6, 9686.0], [79.7, 9697.0], [79.8, 9701.0], [79.9, 9712.0], [80.0, 9714.0], [80.1, 9727.0], [80.2, 9736.0], [80.3, 9767.0], [80.4, 9770.0], [80.5, 9776.0], [80.6, 9785.0], [80.7, 9821.0], [80.8, 9847.0], [80.9, 9880.0], [81.0, 9893.0], [81.1, 9909.0], [81.2, 9928.0], [81.3, 9953.0], [81.4, 9966.0], [81.5, 9983.0], [81.6, 10004.0], [81.7, 10014.0], [81.8, 10019.0], [81.9, 10040.0], [82.0, 10053.0], [82.1, 10056.0], [82.2, 10077.0], [82.3, 10129.0], [82.4, 10144.0], [82.5, 10161.0], [82.6, 10173.0], [82.7, 10193.0], [82.8, 10209.0], [82.9, 10215.0], [83.0, 10218.0], [83.1, 10243.0], [83.2, 10248.0], [83.3, 10254.0], [83.4, 10258.0], [83.5, 10274.0], [83.6, 10279.0], [83.7, 10302.0], [83.8, 10323.0], [83.9, 10356.0], [84.0, 10364.0], [84.1, 10382.0], [84.2, 10409.0], [84.3, 10416.0], [84.4, 10425.0], [84.5, 10467.0], [84.6, 10477.0], [84.7, 10483.0], [84.8, 10489.0], [84.9, 10498.0], [85.0, 10511.0], [85.1, 10527.0], [85.2, 10540.0], [85.3, 10588.0], [85.4, 10602.0], [85.5, 10620.0], [85.6, 10636.0], [85.7, 10670.0], [85.8, 10678.0], [85.9, 10713.0], [86.0, 10720.0], [86.1, 10741.0], [86.2, 10744.0], [86.3, 10756.0], [86.4, 10777.0], [86.5, 10814.0], [86.6, 10840.0], [86.7, 10849.0], [86.8, 10871.0], [86.9, 10886.0], [87.0, 10898.0], [87.1, 10905.0], [87.2, 10911.0], [87.3, 10931.0], [87.4, 10945.0], [87.5, 10971.0], [87.6, 10983.0], [87.7, 10996.0], [87.8, 11007.0], [87.9, 11021.0], [88.0, 11033.0], [88.1, 11052.0], [88.2, 11091.0], [88.3, 11106.0], [88.4, 11113.0], [88.5, 11134.0], [88.6, 11153.0], [88.7, 11186.0], [88.8, 11226.0], [88.9, 11240.0], [89.0, 11254.0], [89.1, 11265.0], [89.2, 11282.0], [89.3, 11306.0], [89.4, 11345.0], [89.5, 11356.0], [89.6, 11365.0], [89.7, 11372.0], [89.8, 11374.0], [89.9, 11418.0], [90.0, 11438.0], [90.1, 11479.0], [90.2, 11506.0], [90.3, 11525.0], [90.4, 11539.0], [90.5, 11560.0], [90.6, 11574.0], [90.7, 11584.0], [90.8, 11612.0], [90.9, 11619.0], [91.0, 11621.0], [91.1, 11669.0], [91.2, 11688.0], [91.3, 11713.0], [91.4, 11722.0], [91.5, 11757.0], [91.6, 11777.0], [91.7, 11815.0], [91.8, 11829.0], [91.9, 11871.0], [92.0, 11889.0], [92.1, 11916.0], [92.2, 11937.0], [92.3, 11949.0], [92.4, 11954.0], [92.5, 11988.0], [92.6, 12013.0], [92.7, 12106.0], [92.8, 12133.0], [92.9, 12149.0], [93.0, 12211.0], [93.1, 12248.0], [93.2, 12255.0], [93.3, 12303.0], [93.4, 12309.0], [93.5, 12379.0], [93.6, 12388.0], [93.7, 12440.0], [93.8, 12474.0], [93.9, 12500.0], [94.0, 12508.0], [94.1, 12570.0], [94.2, 12584.0], [94.3, 12632.0], [94.4, 12682.0], [94.5, 12720.0], [94.6, 12745.0], [94.7, 12779.0], [94.8, 12800.0], [94.9, 12840.0], [95.0, 12864.0], [95.1, 12921.0], [95.2, 12938.0], [95.3, 12985.0], [95.4, 13014.0], [95.5, 13087.0], [95.6, 13171.0], [95.7, 13203.0], [95.8, 13225.0], [95.9, 13247.0], [96.0, 13306.0], [96.1, 13346.0], [96.2, 13387.0], [96.3, 13424.0], [96.4, 13448.0], [96.5, 13536.0], [96.6, 13566.0], [96.7, 13648.0], [96.8, 13669.0], [96.9, 13758.0], [97.0, 13761.0], [97.1, 13802.0], [97.2, 13828.0], [97.3, 13898.0], [97.4, 13963.0], [97.5, 14022.0], [97.6, 14110.0], [97.7, 14207.0], [97.8, 14249.0], [97.9, 14446.0], [98.0, 14570.0], [98.1, 14660.0], [98.2, 14683.0], [98.3, 14983.0], [98.4, 15006.0], [98.5, 15222.0], [98.6, 15249.0], [98.7, 15424.0], [98.8, 15568.0], [98.9, 15645.0], [99.0, 15718.0], [99.1, 15964.0], [99.2, 16000.0], [99.3, 16418.0], [99.4, 16515.0], [99.5, 16561.0], [99.6, 17381.0], [99.7, 17456.0], [99.8, 18187.0], [99.9, 19415.0], [100.0, 21394.0]], "isOverall": false, "label": "TestPost", "isController": false}, {"data": [[0.0, 2493.0], [0.1, 2493.0], [0.2, 2493.0], [0.3, 2493.0], [0.4, 2493.0], [0.5, 2493.0], [0.6, 2493.0], [0.7, 2493.0], [0.8, 2493.0], [0.9, 2493.0], [1.0, 2493.0], [1.1, 2493.0], [1.2, 2493.0], [1.3, 2493.0], [1.4, 2493.0], [1.5, 2493.0], [1.6, 2493.0], [1.7, 2493.0], [1.8, 2493.0], [1.9, 2493.0], [2.0, 2493.0], [2.1, 2493.0], [2.2, 2493.0], [2.3, 2493.0], [2.4, 2493.0], [2.5, 2493.0], [2.6, 2493.0], [2.7, 2493.0], [2.8, 2493.0], [2.9, 2493.0], [3.0, 2493.0], [3.1, 2493.0], [3.2, 2493.0], [3.3, 2493.0], [3.4, 2493.0], [3.5, 2493.0], [3.6, 2493.0], [3.7, 2493.0], [3.8, 2493.0], [3.9, 2493.0], [4.0, 2493.0], [4.1, 2493.0], [4.2, 2493.0], [4.3, 2493.0], [4.4, 2493.0], [4.5, 2493.0], [4.6, 2493.0], [4.7, 2493.0], [4.8, 2493.0], [4.9, 2493.0], [5.0, 2493.0], [5.1, 2493.0], [5.2, 2493.0], [5.3, 2493.0], [5.4, 2493.0], [5.5, 2493.0], [5.6, 2493.0], [5.7, 2493.0], [5.8, 2493.0], [5.9, 2493.0], [6.0, 2493.0], [6.1, 2493.0], [6.2, 2493.0], [6.3, 2493.0], [6.4, 2493.0], [6.5, 2493.0], [6.6, 2493.0], [6.7, 2493.0], [6.8, 2493.0], [6.9, 2493.0], [7.0, 2493.0], [7.1, 2493.0], [7.2, 2493.0], [7.3, 2493.0], [7.4, 2493.0], [7.5, 2493.0], [7.6, 2493.0], [7.7, 2493.0], [7.8, 2493.0], [7.9, 2493.0], [8.0, 2493.0], [8.1, 2493.0], [8.2, 2493.0], [8.3, 2493.0], [8.4, 2493.0], [8.5, 2493.0], [8.6, 2493.0], [8.7, 2493.0], [8.8, 2493.0], [8.9, 2493.0], [9.0, 2493.0], [9.1, 2493.0], [9.2, 2493.0], [9.3, 2493.0], [9.4, 2493.0], [9.5, 2493.0], [9.6, 2493.0], [9.7, 2493.0], [9.8, 2493.0], [9.9, 2493.0], [10.0, 2493.0], [10.1, 2493.0], [10.2, 2493.0], [10.3, 2493.0], [10.4, 2493.0], [10.5, 2493.0], [10.6, 2493.0], [10.7, 2493.0], [10.8, 2493.0], [10.9, 2493.0], [11.0, 2493.0], [11.1, 2493.0], [11.2, 2493.0], [11.3, 2493.0], [11.4, 2493.0], [11.5, 2493.0], [11.6, 2493.0], [11.7, 2493.0], [11.8, 2493.0], [11.9, 2493.0], [12.0, 2493.0], [12.1, 2493.0], [12.2, 2493.0], [12.3, 2493.0], [12.4, 2493.0], [12.5, 2493.0], [12.6, 2493.0], [12.7, 2493.0], [12.8, 2493.0], [12.9, 2493.0], [13.0, 2493.0], [13.1, 2493.0], [13.2, 2493.0], [13.3, 2493.0], [13.4, 2493.0], [13.5, 2493.0], [13.6, 2493.0], [13.7, 2493.0], [13.8, 2493.0], [13.9, 2493.0], [14.0, 2493.0], [14.1, 2493.0], [14.2, 2493.0], [14.3, 2493.0], [14.4, 2493.0], [14.5, 2493.0], [14.6, 2493.0], [14.7, 2493.0], [14.8, 2493.0], [14.9, 2493.0], [15.0, 2493.0], [15.1, 2493.0], [15.2, 2493.0], [15.3, 2493.0], [15.4, 2493.0], [15.5, 2493.0], [15.6, 2493.0], [15.7, 2493.0], [15.8, 2493.0], [15.9, 2493.0], [16.0, 2493.0], [16.1, 2493.0], [16.2, 2493.0], [16.3, 2493.0], [16.4, 2493.0], [16.5, 2493.0], [16.6, 2493.0], [16.7, 2493.0], [16.8, 2493.0], [16.9, 2493.0], [17.0, 2493.0], [17.1, 2493.0], [17.2, 2493.0], [17.3, 2493.0], [17.4, 2493.0], [17.5, 2493.0], [17.6, 2493.0], [17.7, 2493.0], [17.8, 2493.0], [17.9, 2493.0], [18.0, 2493.0], [18.1, 2493.0], [18.2, 2493.0], [18.3, 2493.0], [18.4, 2493.0], [18.5, 2493.0], [18.6, 2493.0], [18.7, 2493.0], [18.8, 2493.0], [18.9, 2493.0], [19.0, 2493.0], [19.1, 2493.0], [19.2, 2493.0], [19.3, 2493.0], [19.4, 2493.0], [19.5, 2493.0], [19.6, 2493.0], [19.7, 2493.0], [19.8, 2493.0], [19.9, 2493.0], [20.0, 2493.0], [20.1, 2493.0], [20.2, 2493.0], [20.3, 2493.0], [20.4, 2493.0], [20.5, 2493.0], [20.6, 2493.0], [20.7, 2493.0], [20.8, 2493.0], [20.9, 2493.0], [21.0, 2493.0], [21.1, 2493.0], [21.2, 2493.0], [21.3, 2493.0], [21.4, 2493.0], [21.5, 2493.0], [21.6, 2493.0], [21.7, 2493.0], [21.8, 2493.0], [21.9, 2493.0], [22.0, 2493.0], [22.1, 2493.0], [22.2, 2493.0], [22.3, 2493.0], [22.4, 2493.0], [22.5, 2493.0], [22.6, 2493.0], [22.7, 2493.0], [22.8, 2493.0], [22.9, 2493.0], [23.0, 2493.0], [23.1, 2493.0], [23.2, 2493.0], [23.3, 2493.0], [23.4, 2493.0], [23.5, 2493.0], [23.6, 2493.0], [23.7, 2493.0], [23.8, 2493.0], [23.9, 2493.0], [24.0, 2493.0], [24.1, 2493.0], [24.2, 2493.0], [24.3, 2493.0], [24.4, 2493.0], [24.5, 2493.0], [24.6, 2493.0], [24.7, 2493.0], [24.8, 2493.0], [24.9, 2493.0], [25.0, 2493.0], [25.1, 2493.0], [25.2, 2493.0], [25.3, 2493.0], [25.4, 2493.0], [25.5, 2493.0], [25.6, 2493.0], [25.7, 2493.0], [25.8, 2493.0], [25.9, 2493.0], [26.0, 2493.0], [26.1, 2493.0], [26.2, 2493.0], [26.3, 2493.0], [26.4, 2493.0], [26.5, 2493.0], [26.6, 2493.0], [26.7, 2493.0], [26.8, 2493.0], [26.9, 2493.0], [27.0, 2493.0], [27.1, 2493.0], [27.2, 2493.0], [27.3, 2493.0], [27.4, 2493.0], [27.5, 2493.0], [27.6, 2493.0], [27.7, 2493.0], [27.8, 2493.0], [27.9, 2493.0], [28.0, 2493.0], [28.1, 2493.0], [28.2, 2493.0], [28.3, 2493.0], [28.4, 2493.0], [28.5, 2493.0], [28.6, 2493.0], [28.7, 2493.0], [28.8, 2493.0], [28.9, 2493.0], [29.0, 2493.0], [29.1, 2493.0], [29.2, 2493.0], [29.3, 2493.0], [29.4, 2493.0], [29.5, 2493.0], [29.6, 2493.0], [29.7, 2493.0], [29.8, 2493.0], [29.9, 2493.0], [30.0, 2493.0], [30.1, 2493.0], [30.2, 2493.0], [30.3, 2493.0], [30.4, 2493.0], [30.5, 2493.0], [30.6, 2493.0], [30.7, 2493.0], [30.8, 2493.0], [30.9, 2493.0], [31.0, 2493.0], [31.1, 2493.0], [31.2, 2493.0], [31.3, 2493.0], [31.4, 2493.0], [31.5, 2493.0], [31.6, 2493.0], [31.7, 2493.0], [31.8, 2493.0], [31.9, 2493.0], [32.0, 2493.0], [32.1, 2493.0], [32.2, 2493.0], [32.3, 2493.0], [32.4, 2493.0], [32.5, 2493.0], [32.6, 2493.0], [32.7, 2493.0], [32.8, 2493.0], [32.9, 2493.0], [33.0, 2493.0], [33.1, 2493.0], [33.2, 2493.0], [33.3, 2493.0], [33.4, 2493.0], [33.5, 2493.0], [33.6, 2493.0], [33.7, 2493.0], [33.8, 2493.0], [33.9, 2493.0], [34.0, 2493.0], [34.1, 2493.0], [34.2, 2493.0], [34.3, 2493.0], [34.4, 2493.0], [34.5, 2493.0], [34.6, 2493.0], [34.7, 2493.0], [34.8, 2493.0], [34.9, 2493.0], [35.0, 2493.0], [35.1, 2493.0], [35.2, 2493.0], [35.3, 2493.0], [35.4, 2493.0], [35.5, 2493.0], [35.6, 2493.0], [35.7, 2493.0], [35.8, 2493.0], [35.9, 2493.0], [36.0, 2493.0], [36.1, 2493.0], [36.2, 2493.0], [36.3, 2493.0], [36.4, 2493.0], [36.5, 2493.0], [36.6, 2493.0], [36.7, 2493.0], [36.8, 2493.0], [36.9, 2493.0], [37.0, 2493.0], [37.1, 2493.0], [37.2, 2493.0], [37.3, 2493.0], [37.4, 2493.0], [37.5, 2493.0], [37.6, 2493.0], [37.7, 2493.0], [37.8, 2493.0], [37.9, 2493.0], [38.0, 2493.0], [38.1, 2493.0], [38.2, 2493.0], [38.3, 2493.0], [38.4, 2493.0], [38.5, 2493.0], [38.6, 2493.0], [38.7, 2493.0], [38.8, 2493.0], [38.9, 2493.0], [39.0, 2493.0], [39.1, 2493.0], [39.2, 2493.0], [39.3, 2493.0], [39.4, 2493.0], [39.5, 2493.0], [39.6, 2493.0], [39.7, 2493.0], [39.8, 2493.0], [39.9, 2493.0], [40.0, 2493.0], [40.1, 2493.0], [40.2, 2493.0], [40.3, 2493.0], [40.4, 2493.0], [40.5, 2493.0], [40.6, 2493.0], [40.7, 2493.0], [40.8, 2493.0], [40.9, 2493.0], [41.0, 2493.0], [41.1, 2493.0], [41.2, 2493.0], [41.3, 2493.0], [41.4, 2493.0], [41.5, 2493.0], [41.6, 2493.0], [41.7, 2493.0], [41.8, 2493.0], [41.9, 2493.0], [42.0, 2493.0], [42.1, 2493.0], [42.2, 2493.0], [42.3, 2493.0], [42.4, 2493.0], [42.5, 2493.0], [42.6, 2493.0], [42.7, 2493.0], [42.8, 2493.0], [42.9, 2493.0], [43.0, 2493.0], [43.1, 2493.0], [43.2, 2493.0], [43.3, 2493.0], [43.4, 2493.0], [43.5, 2493.0], [43.6, 2493.0], [43.7, 2493.0], [43.8, 2493.0], [43.9, 2493.0], [44.0, 2493.0], [44.1, 2493.0], [44.2, 2493.0], [44.3, 2493.0], [44.4, 2493.0], [44.5, 2493.0], [44.6, 2493.0], [44.7, 2493.0], [44.8, 2493.0], [44.9, 2493.0], [45.0, 2493.0], [45.1, 2493.0], [45.2, 2493.0], [45.3, 2493.0], [45.4, 2493.0], [45.5, 2493.0], [45.6, 2493.0], [45.7, 2493.0], [45.8, 2493.0], [45.9, 2493.0], [46.0, 2493.0], [46.1, 2493.0], [46.2, 2493.0], [46.3, 2493.0], [46.4, 2493.0], [46.5, 2493.0], [46.6, 2493.0], [46.7, 2493.0], [46.8, 2493.0], [46.9, 2493.0], [47.0, 2493.0], [47.1, 2493.0], [47.2, 2493.0], [47.3, 2493.0], [47.4, 2493.0], [47.5, 2493.0], [47.6, 2493.0], [47.7, 2493.0], [47.8, 2493.0], [47.9, 2493.0], [48.0, 2493.0], [48.1, 2493.0], [48.2, 2493.0], [48.3, 2493.0], [48.4, 2493.0], [48.5, 2493.0], [48.6, 2493.0], [48.7, 2493.0], [48.8, 2493.0], [48.9, 2493.0], [49.0, 2493.0], [49.1, 2493.0], [49.2, 2493.0], [49.3, 2493.0], [49.4, 2493.0], [49.5, 2493.0], [49.6, 2493.0], [49.7, 2493.0], [49.8, 2493.0], [49.9, 2493.0], [50.0, 2493.0], [50.1, 2493.0], [50.2, 2493.0], [50.3, 2493.0], [50.4, 2493.0], [50.5, 2493.0], [50.6, 2493.0], [50.7, 2493.0], [50.8, 2493.0], [50.9, 2493.0], [51.0, 2493.0], [51.1, 2493.0], [51.2, 2493.0], [51.3, 2493.0], [51.4, 2493.0], [51.5, 2493.0], [51.6, 2493.0], [51.7, 2493.0], [51.8, 2493.0], [51.9, 2493.0], [52.0, 2493.0], [52.1, 2493.0], [52.2, 2493.0], [52.3, 2493.0], [52.4, 2493.0], [52.5, 2493.0], [52.6, 2493.0], [52.7, 2493.0], [52.8, 2493.0], [52.9, 2493.0], [53.0, 2493.0], [53.1, 2493.0], [53.2, 2493.0], [53.3, 2493.0], [53.4, 2493.0], [53.5, 2493.0], [53.6, 2493.0], [53.7, 2493.0], [53.8, 2493.0], [53.9, 2493.0], [54.0, 2493.0], [54.1, 2493.0], [54.2, 2493.0], [54.3, 2493.0], [54.4, 2493.0], [54.5, 2493.0], [54.6, 2493.0], [54.7, 2493.0], [54.8, 2493.0], [54.9, 2493.0], [55.0, 2493.0], [55.1, 2493.0], [55.2, 2493.0], [55.3, 2493.0], [55.4, 2493.0], [55.5, 2493.0], [55.6, 2493.0], [55.7, 2493.0], [55.8, 2493.0], [55.9, 2493.0], [56.0, 2493.0], [56.1, 2493.0], [56.2, 2493.0], [56.3, 2493.0], [56.4, 2493.0], [56.5, 2493.0], [56.6, 2493.0], [56.7, 2493.0], [56.8, 2493.0], [56.9, 2493.0], [57.0, 2493.0], [57.1, 2493.0], [57.2, 2493.0], [57.3, 2493.0], [57.4, 2493.0], [57.5, 2493.0], [57.6, 2493.0], [57.7, 2493.0], [57.8, 2493.0], [57.9, 2493.0], [58.0, 2493.0], [58.1, 2493.0], [58.2, 2493.0], [58.3, 2493.0], [58.4, 2493.0], [58.5, 2493.0], [58.6, 2493.0], [58.7, 2493.0], [58.8, 2493.0], [58.9, 2493.0], [59.0, 2493.0], [59.1, 2493.0], [59.2, 2493.0], [59.3, 2493.0], [59.4, 2493.0], [59.5, 2493.0], [59.6, 2493.0], [59.7, 2493.0], [59.8, 2493.0], [59.9, 2493.0], [60.0, 2493.0], [60.1, 2493.0], [60.2, 2493.0], [60.3, 2493.0], [60.4, 2493.0], [60.5, 2493.0], [60.6, 2493.0], [60.7, 2493.0], [60.8, 2493.0], [60.9, 2493.0], [61.0, 2493.0], [61.1, 2493.0], [61.2, 2493.0], [61.3, 2493.0], [61.4, 2493.0], [61.5, 2493.0], [61.6, 2493.0], [61.7, 2493.0], [61.8, 2493.0], [61.9, 2493.0], [62.0, 2493.0], [62.1, 2493.0], [62.2, 2493.0], [62.3, 2493.0], [62.4, 2493.0], [62.5, 2493.0], [62.6, 2493.0], [62.7, 2493.0], [62.8, 2493.0], [62.9, 2493.0], [63.0, 2493.0], [63.1, 2493.0], [63.2, 2493.0], [63.3, 2493.0], [63.4, 2493.0], [63.5, 2493.0], [63.6, 2493.0], [63.7, 2493.0], [63.8, 2493.0], [63.9, 2493.0], [64.0, 2493.0], [64.1, 2493.0], [64.2, 2493.0], [64.3, 2493.0], [64.4, 2493.0], [64.5, 2493.0], [64.6, 2493.0], [64.7, 2493.0], [64.8, 2493.0], [64.9, 2493.0], [65.0, 2493.0], [65.1, 2493.0], [65.2, 2493.0], [65.3, 2493.0], [65.4, 2493.0], [65.5, 2493.0], [65.6, 2493.0], [65.7, 2493.0], [65.8, 2493.0], [65.9, 2493.0], [66.0, 2493.0], [66.1, 2493.0], [66.2, 2493.0], [66.3, 2493.0], [66.4, 2493.0], [66.5, 2493.0], [66.6, 2493.0], [66.7, 2493.0], [66.8, 2493.0], [66.9, 2493.0], [67.0, 2493.0], [67.1, 2493.0], [67.2, 2493.0], [67.3, 2493.0], [67.4, 2493.0], [67.5, 2493.0], [67.6, 2493.0], [67.7, 2493.0], [67.8, 2493.0], [67.9, 2493.0], [68.0, 2493.0], [68.1, 2493.0], [68.2, 2493.0], [68.3, 2493.0], [68.4, 2493.0], [68.5, 2493.0], [68.6, 2493.0], [68.7, 2493.0], [68.8, 2493.0], [68.9, 2493.0], [69.0, 2493.0], [69.1, 2493.0], [69.2, 2493.0], [69.3, 2493.0], [69.4, 2493.0], [69.5, 2493.0], [69.6, 2493.0], [69.7, 2493.0], [69.8, 2493.0], [69.9, 2493.0], [70.0, 2493.0], [70.1, 2493.0], [70.2, 2493.0], [70.3, 2493.0], [70.4, 2493.0], [70.5, 2493.0], [70.6, 2493.0], [70.7, 2493.0], [70.8, 2493.0], [70.9, 2493.0], [71.0, 2493.0], [71.1, 2493.0], [71.2, 2493.0], [71.3, 2493.0], [71.4, 2493.0], [71.5, 2493.0], [71.6, 2493.0], [71.7, 2493.0], [71.8, 2493.0], [71.9, 2493.0], [72.0, 2493.0], [72.1, 2493.0], [72.2, 2493.0], [72.3, 2493.0], [72.4, 2493.0], [72.5, 2493.0], [72.6, 2493.0], [72.7, 2493.0], [72.8, 2493.0], [72.9, 2493.0], [73.0, 2493.0], [73.1, 2493.0], [73.2, 2493.0], [73.3, 2493.0], [73.4, 2493.0], [73.5, 2493.0], [73.6, 2493.0], [73.7, 2493.0], [73.8, 2493.0], [73.9, 2493.0], [74.0, 2493.0], [74.1, 2493.0], [74.2, 2493.0], [74.3, 2493.0], [74.4, 2493.0], [74.5, 2493.0], [74.6, 2493.0], [74.7, 2493.0], [74.8, 2493.0], [74.9, 2493.0], [75.0, 2493.0], [75.1, 2493.0], [75.2, 2493.0], [75.3, 2493.0], [75.4, 2493.0], [75.5, 2493.0], [75.6, 2493.0], [75.7, 2493.0], [75.8, 2493.0], [75.9, 2493.0], [76.0, 2493.0], [76.1, 2493.0], [76.2, 2493.0], [76.3, 2493.0], [76.4, 2493.0], [76.5, 2493.0], [76.6, 2493.0], [76.7, 2493.0], [76.8, 2493.0], [76.9, 2493.0], [77.0, 2493.0], [77.1, 2493.0], [77.2, 2493.0], [77.3, 2493.0], [77.4, 2493.0], [77.5, 2493.0], [77.6, 2493.0], [77.7, 2493.0], [77.8, 2493.0], [77.9, 2493.0], [78.0, 2493.0], [78.1, 2493.0], [78.2, 2493.0], [78.3, 2493.0], [78.4, 2493.0], [78.5, 2493.0], [78.6, 2493.0], [78.7, 2493.0], [78.8, 2493.0], [78.9, 2493.0], [79.0, 2493.0], [79.1, 2493.0], [79.2, 2493.0], [79.3, 2493.0], [79.4, 2493.0], [79.5, 2493.0], [79.6, 2493.0], [79.7, 2493.0], [79.8, 2493.0], [79.9, 2493.0], [80.0, 2493.0], [80.1, 2493.0], [80.2, 2493.0], [80.3, 2493.0], [80.4, 2493.0], [80.5, 2493.0], [80.6, 2493.0], [80.7, 2493.0], [80.8, 2493.0], [80.9, 2493.0], [81.0, 2493.0], [81.1, 2493.0], [81.2, 2493.0], [81.3, 2493.0], [81.4, 2493.0], [81.5, 2493.0], [81.6, 2493.0], [81.7, 2493.0], [81.8, 2493.0], [81.9, 2493.0], [82.0, 2493.0], [82.1, 2493.0], [82.2, 2493.0], [82.3, 2493.0], [82.4, 2493.0], [82.5, 2493.0], [82.6, 2493.0], [82.7, 2493.0], [82.8, 2493.0], [82.9, 2493.0], [83.0, 2493.0], [83.1, 2493.0], [83.2, 2493.0], [83.3, 2493.0], [83.4, 2493.0], [83.5, 2493.0], [83.6, 2493.0], [83.7, 2493.0], [83.8, 2493.0], [83.9, 2493.0], [84.0, 2493.0], [84.1, 2493.0], [84.2, 2493.0], [84.3, 2493.0], [84.4, 2493.0], [84.5, 2493.0], [84.6, 2493.0], [84.7, 2493.0], [84.8, 2493.0], [84.9, 2493.0], [85.0, 2493.0], [85.1, 2493.0], [85.2, 2493.0], [85.3, 2493.0], [85.4, 2493.0], [85.5, 2493.0], [85.6, 2493.0], [85.7, 2493.0], [85.8, 2493.0], [85.9, 2493.0], [86.0, 2493.0], [86.1, 2493.0], [86.2, 2493.0], [86.3, 2493.0], [86.4, 2493.0], [86.5, 2493.0], [86.6, 2493.0], [86.7, 2493.0], [86.8, 2493.0], [86.9, 2493.0], [87.0, 2493.0], [87.1, 2493.0], [87.2, 2493.0], [87.3, 2493.0], [87.4, 2493.0], [87.5, 2493.0], [87.6, 2493.0], [87.7, 2493.0], [87.8, 2493.0], [87.9, 2493.0], [88.0, 2493.0], [88.1, 2493.0], [88.2, 2493.0], [88.3, 2493.0], [88.4, 2493.0], [88.5, 2493.0], [88.6, 2493.0], [88.7, 2493.0], [88.8, 2493.0], [88.9, 2493.0], [89.0, 2493.0], [89.1, 2493.0], [89.2, 2493.0], [89.3, 2493.0], [89.4, 2493.0], [89.5, 2493.0], [89.6, 2493.0], [89.7, 2493.0], [89.8, 2493.0], [89.9, 2493.0], [90.0, 2493.0], [90.1, 2493.0], [90.2, 2493.0], [90.3, 2493.0], [90.4, 2493.0], [90.5, 2493.0], [90.6, 2493.0], [90.7, 2493.0], [90.8, 2493.0], [90.9, 2493.0], [91.0, 2493.0], [91.1, 2493.0], [91.2, 2493.0], [91.3, 2493.0], [91.4, 2493.0], [91.5, 2493.0], [91.6, 2493.0], [91.7, 2493.0], [91.8, 2493.0], [91.9, 2493.0], [92.0, 2493.0], [92.1, 2493.0], [92.2, 2493.0], [92.3, 2493.0], [92.4, 2493.0], [92.5, 2493.0], [92.6, 2493.0], [92.7, 2493.0], [92.8, 2493.0], [92.9, 2493.0], [93.0, 2493.0], [93.1, 2493.0], [93.2, 2493.0], [93.3, 2493.0], [93.4, 2493.0], [93.5, 2493.0], [93.6, 2493.0], [93.7, 2493.0], [93.8, 2493.0], [93.9, 2493.0], [94.0, 2493.0], [94.1, 2493.0], [94.2, 2493.0], [94.3, 2493.0], [94.4, 2493.0], [94.5, 2493.0], [94.6, 2493.0], [94.7, 2493.0], [94.8, 2493.0], [94.9, 2493.0], [95.0, 2493.0], [95.1, 2493.0], [95.2, 2493.0], [95.3, 2493.0], [95.4, 2493.0], [95.5, 2493.0], [95.6, 2493.0], [95.7, 2493.0], [95.8, 2493.0], [95.9, 2493.0], [96.0, 2493.0], [96.1, 2493.0], [96.2, 2493.0], [96.3, 2493.0], [96.4, 2493.0], [96.5, 2493.0], [96.6, 2493.0], [96.7, 2493.0], [96.8, 2493.0], [96.9, 2493.0], [97.0, 2493.0], [97.1, 2493.0], [97.2, 2493.0], [97.3, 2493.0], [97.4, 2493.0], [97.5, 2493.0], [97.6, 2493.0], [97.7, 2493.0], [97.8, 2493.0], [97.9, 2493.0], [98.0, 2493.0], [98.1, 2493.0], [98.2, 2493.0], [98.3, 2493.0], [98.4, 2493.0], [98.5, 2493.0], [98.6, 2493.0], [98.7, 2493.0], [98.8, 2493.0], [98.9, 2493.0], [99.0, 2493.0], [99.1, 2493.0], [99.2, 2493.0], [99.3, 2493.0], [99.4, 2493.0], [99.5, 2493.0], [99.6, 2493.0], [99.7, 2493.0], [99.8, 2493.0], [99.9, 2493.0]], "isOverall": false, "label": "LoginPost", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 500.0, "maxY": 44.0, "series": [{"data": [[900.0, 1.0]], "isOverall": false, "label": "DependencyPost", "isController": false}, {"data": [[500.0, 1.0], [600.0, 8.0], [700.0, 9.0], [800.0, 7.0], [900.0, 6.0], [1000.0, 30.0], [1100.0, 9.0], [1200.0, 23.0], [1300.0, 15.0], [1400.0, 7.0], [1500.0, 13.0], [1600.0, 7.0], [1700.0, 14.0], [1800.0, 15.0], [1900.0, 17.0], [2000.0, 12.0], [2100.0, 14.0], [2300.0, 15.0], [2200.0, 8.0], [2400.0, 18.0], [2500.0, 11.0], [2600.0, 15.0], [2700.0, 19.0], [2800.0, 20.0], [2900.0, 27.0], [3000.0, 15.0], [3100.0, 24.0], [3300.0, 16.0], [3200.0, 19.0], [3400.0, 12.0], [3500.0, 17.0], [3600.0, 23.0], [3700.0, 24.0], [3800.0, 18.0], [3900.0, 23.0], [4000.0, 19.0], [4100.0, 32.0], [4300.0, 25.0], [4200.0, 28.0], [4400.0, 26.0], [4600.0, 26.0], [4500.0, 26.0], [4700.0, 24.0], [4800.0, 22.0], [5000.0, 18.0], [4900.0, 28.0], [5100.0, 23.0], [5200.0, 34.0], [5300.0, 30.0], [5400.0, 36.0], [5600.0, 31.0], [5500.0, 26.0], [5800.0, 21.0], [5700.0, 26.0], [6100.0, 44.0], [6000.0, 25.0], [5900.0, 25.0], [6200.0, 31.0], [6300.0, 22.0], [6500.0, 23.0], [6600.0, 25.0], [6400.0, 29.0], [6800.0, 35.0], [6700.0, 32.0], [6900.0, 26.0], [7100.0, 21.0], [7000.0, 19.0], [7300.0, 26.0], [7200.0, 30.0], [7400.0, 16.0], [7500.0, 27.0], [7600.0, 23.0], [7900.0, 30.0], [7800.0, 15.0], [7700.0, 27.0], [8100.0, 28.0], [8000.0, 18.0], [8500.0, 23.0], [8600.0, 33.0], [8700.0, 27.0], [8200.0, 20.0], [8400.0, 26.0], [8300.0, 28.0], [8800.0, 20.0], [8900.0, 17.0], [9000.0, 20.0], [9100.0, 28.0], [9200.0, 33.0], [9400.0, 23.0], [9700.0, 22.0], [9500.0, 24.0], [9300.0, 20.0], [9600.0, 23.0], [10000.0, 16.0], [10200.0, 23.0], [9800.0, 10.0], [10100.0, 14.0], [9900.0, 13.0], [10400.0, 19.0], [10300.0, 12.0], [10500.0, 10.0], [10600.0, 14.0], [10700.0, 14.0], [10800.0, 15.0], [11100.0, 12.0], [10900.0, 17.0], [11200.0, 14.0], [11000.0, 13.0], [11300.0, 14.0], [11600.0, 12.0], [11500.0, 15.0], [11700.0, 10.0], [11400.0, 8.0], [11900.0, 12.0], [11800.0, 10.0], [12200.0, 7.0], [12100.0, 7.0], [12000.0, 4.0], [12700.0, 8.0], [12300.0, 9.0], [12400.0, 7.0], [12600.0, 5.0], [12500.0, 9.0], [13200.0, 7.0], [12900.0, 8.0], [13100.0, 4.0], [12800.0, 6.0], [13300.0, 7.0], [13000.0, 5.0], [13800.0, 6.0], [13500.0, 7.0], [13600.0, 3.0], [13400.0, 4.0], [13700.0, 7.0], [14100.0, 2.0], [14200.0, 5.0], [13900.0, 3.0], [14300.0, 1.0], [14000.0, 3.0], [14600.0, 4.0], [14700.0, 1.0], [14400.0, 2.0], [14500.0, 2.0], [15200.0, 4.0], [14900.0, 3.0], [15100.0, 2.0], [15000.0, 1.0], [15300.0, 1.0], [15500.0, 2.0], [15600.0, 3.0], [15700.0, 2.0], [15400.0, 2.0], [15800.0, 1.0], [16200.0, 1.0], [16000.0, 2.0], [15900.0, 2.0], [16800.0, 1.0], [16500.0, 4.0], [16400.0, 2.0], [17400.0, 3.0], [17300.0, 1.0], [18200.0, 1.0], [18100.0, 1.0], [17800.0, 1.0], [18600.0, 1.0], [19400.0, 1.0], [20000.0, 1.0], [21300.0, 1.0]], "isOverall": false, "label": "TestPost", "isController": false}, {"data": [[2400.0, 1.0]], "isOverall": false, "label": "LoginPost", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2378.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 116.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2378.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 8.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.660689718E12, "maxY": 250.0, "series": [{"data": [[1.660689799E12, 91.81818181818183], [1.660689756E12, 248.0], [1.66068976E12, 248.0], [1.660689758E12, 248.0], [1.660689801E12, 57.451612903225794], [1.660689752E12, 250.0], [1.66068975E12, 250.0], [1.660689793E12, 157.46666666666667], [1.660689754E12, 249.0], [1.660689797E12, 118.26666666666667], [1.660689795E12, 147.24], [1.660689725E12, 142.19354838709677], [1.660689768E12, 244.0], [1.660689723E12, 92.53333333333333], [1.660689766E12, 245.0], [1.660689727E12, 192.04166666666663], [1.66068977E12, 243.0], [1.660689762E12, 248.0], [1.660689803E12, 19.333333333333336], [1.660689721E12, 43.24], [1.660689764E12, 245.18518518518516], [1.660689735E12, 250.0], [1.660689778E12, 227.86363636363635], [1.660689737E12, 250.0], [1.66068978E12, 222.91666666666666], [1.660689729E12, 245.3103448275862], [1.660689772E12, 240.43749999999997], [1.660689733E12, 250.0], [1.660689776E12, 231.96666666666667], [1.660689731E12, 250.0], [1.660689774E12, 237.65517241379305], [1.660689745E12, 250.0], [1.660689788E12, 192.51724137931038], [1.660689749E12, 250.0], [1.660689792E12, 166.44117647058826], [1.660689747E12, 250.0], [1.66068979E12, 180.93333333333337], [1.660689741E12, 250.0], [1.660689784E12, 211.85000000000002], [1.660689739E12, 250.0], [1.660689782E12, 219.0], [1.660689743E12, 250.0], [1.660689786E12, 202.83333333333331], [1.660689757E12, 248.0], [1.6606898E12, 78.04999999999998], [1.660689755E12, 248.07692307692307], [1.660689798E12, 103.46875000000003], [1.660689759E12, 248.0], [1.660689802E12, 38.63333333333334], [1.660689751E12, 250.0], [1.660689794E12, 149.22727272727272], [1.660689753E12, 249.2857142857143], [1.660689796E12, 133.82222222222217], [1.660689767E12, 244.4], [1.660689724E12, 118.63999999999999], [1.660689728E12, 217.0], [1.660689726E12, 168.93548387096783], [1.660689769E12, 243.85185185185185], [1.66068972E12, 28.2], [1.660689761E12, 248.0], [1.660689804E12, 3.0], [1.660689722E12, 67.72413793103446], [1.660689765E12, 245.0], [1.660689763E12, 247.77777777777777], [1.660689736E12, 250.0], [1.660689734E12, 250.0], [1.660689777E12, 230.40625000000003], [1.660689738E12, 250.0], [1.660689781E12, 219.99999999999997], [1.660689779E12, 224.47058823529412], [1.66068973E12, 250.0], [1.660689773E12, 239.95238095238093], [1.660689771E12, 242.72727272727272], [1.660689775E12, 234.0769230769231], [1.660689732E12, 250.0], [1.660689746E12, 250.0], [1.660689789E12, 186.62962962962965], [1.660689787E12, 198.32432432432432], [1.660689791E12, 174.17142857142858], [1.660689748E12, 250.0], [1.660689783E12, 216.69767441860466], [1.66068974E12, 250.0], [1.660689744E12, 250.0], [1.660689742E12, 250.0], [1.660689785E12, 207.46875]], "isOverall": false, "label": "TestGroup", "isController": false}, {"data": [[1.660689719E12, 1.0], [1.660689718E12, 1.0]], "isOverall": false, "label": "SetupGroup", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.660689804E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 583.0, "minX": 1.0, "maxY": 11154.8, "series": [{"data": [[1.0, 979.0]], "isOverall": false, "label": "DependencyPost", "isController": false}, {"data": [[1.0, 979.0]], "isOverall": false, "label": "DependencyPost-Aggregated", "isController": false}, {"data": [[2.0, 583.0], [3.0, 738.6666666666666], [4.0, 696.0], [5.0, 908.0], [6.0, 819.0], [7.0, 843.0], [8.0, 800.0], [9.0, 1352.0], [10.0, 699.0], [11.0, 991.0], [12.0, 1350.0], [13.0, 845.0], [14.0, 1725.0], [15.0, 2044.0], [16.0, 1104.0], [17.0, 1071.0], [18.0, 1218.0], [19.0, 1547.0], [20.0, 1719.5], [21.0, 1809.0], [22.0, 3169.0], [23.0, 3225.0], [24.0, 2546.0], [25.0, 2480.0], [26.0, 1442.0], [27.0, 1614.0], [28.0, 1262.0], [29.0, 1801.75], [30.0, 2490.3333333333335], [31.0, 1499.5], [32.0, 1016.0], [33.0, 2307.0], [34.0, 2927.3333333333335], [35.0, 1700.3333333333333], [36.0, 1968.3333333333335], [37.0, 3457.0], [38.0, 2348.25], [39.0, 2003.25], [40.0, 912.6666666666666], [41.0, 3870.0], [42.0, 1033.5], [43.0, 1474.6666666666665], [45.0, 1234.3333333333333], [44.0, 3864.0], [46.0, 2888.2], [47.0, 1880.0], [48.0, 1981.5], [49.0, 4098.0], [50.0, 2203.4], [51.0, 2556.5], [52.0, 4438.0], [53.0, 1788.0], [55.0, 3183.0], [54.0, 2259.0], [57.0, 2843.0], [56.0, 3100.0], [58.0, 1387.3333333333333], [59.0, 3466.5], [60.0, 3984.5], [61.0, 2996.666666666667], [63.0, 1521.2], [62.0, 3874.0], [65.0, 1607.0], [66.0, 2280.6666666666665], [67.0, 7229.0], [64.0, 4108.0], [69.0, 4492.0], [70.0, 1944.75], [71.0, 1253.0], [73.0, 2718.0], [74.0, 3578.0], [75.0, 2737.4], [72.0, 2143.0], [76.0, 2382.666666666667], [77.0, 661.0], [79.0, 4645.666666666667], [78.0, 7267.0], [80.0, 2283.2], [81.0, 2495.0], [82.0, 1703.0], [83.0, 978.0], [84.0, 4013.25], [85.0, 3292.0], [87.0, 3304.6], [86.0, 4132.5], [90.0, 2488.0], [91.0, 2874.0], [89.0, 4140.0], [88.0, 5966.0], [92.0, 6500.0], [95.0, 2931.142857142857], [94.0, 8118.0], [93.0, 8286.5], [96.0, 2989.6], [99.0, 3278.8], [98.0, 5731.75], [97.0, 2228.0], [101.0, 4099.0], [102.0, 3538.3333333333335], [103.0, 4258.666666666667], [100.0, 3617.0], [104.0, 6367.0], [105.0, 4551.5], [107.0, 3664.0], [106.0, 8611.4], [108.0, 4389.5], [109.0, 3455.666666666667], [111.0, 4602.0], [110.0, 5329.0], [113.0, 2694.3333333333335], [114.0, 4613.0], [115.0, 4158.8], [112.0, 6596.5], [117.0, 4614.125], [118.0, 3310.6666666666665], [119.0, 3477.0], [116.0, 6711.666666666667], [120.0, 3246.0], [121.0, 4217.0], [122.0, 3178.0], [123.0, 2240.25], [125.0, 4652.5], [127.0, 3713.5], [126.0, 6030.75], [124.0, 2686.0], [128.0, 3593.333333333333], [130.0, 3766.5], [131.0, 5578.0], [134.0, 4235.25], [135.0, 4995.5], [133.0, 10470.0], [132.0, 5723.666666666667], [129.0, 11154.8], [136.0, 4915.5], [138.0, 4767.571428571429], [140.0, 4505.0], [141.0, 3064.0], [143.0, 3255.0], [142.0, 7135.0], [139.0, 3658.0], [137.0, 8510.666666666666], [145.0, 5807.625], [146.0, 3677.8333333333335], [147.0, 7498.0], [149.0, 6088.750000000001], [150.0, 2777.166666666667], [151.0, 3944.5], [148.0, 4248.0], [153.0, 4221.0], [157.0, 3241.75], [159.0, 4828.0], [156.0, 5656.0], [155.0, 3912.0], [154.0, 7622.5], [152.0, 5888.166666666666], [160.0, 2691.25], [162.0, 3927.5], [163.0, 5838.444444444444], [165.0, 7694.25], [166.0, 2289.0], [167.0, 6600.428571428572], [164.0, 7691.6], [161.0, 7191.0], [171.0, 4316.375], [172.0, 6305.285714285714], [173.0, 5876.833333333334], [174.0, 6315.916666666666], [175.0, 4747.0], [170.0, 9424.333333333334], [169.0, 5813.333333333333], [168.0, 4207.666666666667], [178.0, 4276.0], [179.0, 2181.3333333333335], [180.0, 6913.333333333333], [181.0, 8639.625], [183.0, 7350.5], [182.0, 7030.714285714285], [177.0, 7422.333333333333], [176.0, 6895.500000000001], [184.0, 6976.25], [185.0, 6015.666666666667], [186.0, 6666.25], [190.0, 5144.749999999999], [191.0, 5166.714285714285], [189.0, 6722.333333333333], [187.0, 8216.571428571428], [194.0, 6227.0], [195.0, 6199.666666666667], [196.0, 3703.3333333333335], [197.0, 7469.444444444444], [198.0, 3261.6666666666665], [199.0, 9412.555555555557], [193.0, 8572.714285714284], [192.0, 6062.428571428572], [200.0, 5639.5], [202.0, 7573.8], [207.0, 8473.0], [206.0, 9630.818181818182], [205.0, 5155.5], [204.0, 8476.0], [203.0, 7243.0], [201.0, 8971.833333333336], [208.0, 5079.0], [209.0, 6437.785714285714], [210.0, 6999.0], [212.0, 6061.0], [213.0, 3058.0], [214.0, 5978.181818181818], [215.0, 6918.888888888889], [211.0, 6656.666666666667], [216.0, 7416.500000000001], [220.0, 7650.333333333333], [221.0, 6053.076923076923], [222.0, 8158.299999999999], [223.0, 6677.400000000001], [219.0, 8310.459459459462], [218.0, 8110.666666666667], [217.0, 7184.777777777777], [225.0, 6109.555555555556], [228.0, 7198.555555555556], [230.0, 7923.0], [231.0, 7642.513513513513], [229.0, 7573.733333333334], [227.0, 7118.285714285714], [226.0, 8230.8], [224.0, 8204.314285714283], [232.0, 6636.5], [233.0, 6432.941176470589], [238.0, 5245.142857142858], [239.0, 8541.0], [237.0, 6737.866666666666], [236.0, 5545.0], [235.0, 6363.0], [234.0, 6895.40909090909], [240.0, 9133.078431372549], [242.0, 6156.166666666666], [245.0, 8046.438095238094], [246.0, 5926.999999999999], [247.0, 3594.5], [244.0, 9076.402985074628], [243.0, 9038.391891891892], [241.0, 8233.285714285714], [248.0, 8106.714859437748], [249.0, 7719.262295081966], [250.0, 7634.417256011314], [1.0, 607.0]], "isOverall": false, "label": "TestPost", "isController": false}, {"data": [[207.00680000000028, 6914.216000000006]], "isOverall": false, "label": "TestPost-Aggregated", "isController": false}, {"data": [[1.0, 2493.0]], "isOverall": false, "label": "LoginPost", "isController": false}, {"data": [[1.0, 2493.0]], "isOverall": false, "label": "LoginPost-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 250.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 229.0, "minX": 1.660689718E12, "maxY": 119856.0, "series": [{"data": [[1.660689799E12, 20589.0], [1.660689756E12, 28065.0], [1.66068976E12, 39294.0], [1.660689758E12, 32742.0], [1.660689801E12, 29013.0], [1.660689752E12, 31491.0], [1.66068975E12, 56669.0], [1.660689793E12, 28074.0], [1.660689754E12, 27131.0], [1.660689797E12, 28073.0], [1.660689795E12, 23396.0], [1.660689725E12, 28984.0], [1.660689768E12, 29938.0], [1.660689723E12, 28046.0], [1.660689766E12, 36483.0], [1.660689727E12, 22443.0], [1.66068977E12, 43040.0], [1.660689719E12, 958.0], [1.660689762E12, 28070.0], [1.660689803E12, 30887.0], [1.660689721E12, 23363.0], [1.660689764E12, 25260.0], [1.660689735E12, 29934.0], [1.660689778E12, 20588.0], [1.660689737E12, 23390.0], [1.66068978E12, 33682.0], [1.660689729E12, 27125.0], [1.660689772E12, 14969.0], [1.660689733E12, 29003.0], [1.660689776E12, 28065.0], [1.660689731E12, 23390.0], [1.660689774E12, 27132.0], [1.660689745E12, 25263.0], [1.660689788E12, 27130.0], [1.660689749E12, 21517.0], [1.660689792E12, 31819.0], [1.660689747E12, 20583.0], [1.66068979E12, 28071.0], [1.660689741E12, 26199.0], [1.660689784E12, 18710.0], [1.660689739E12, 32741.0], [1.660689782E12, 17780.0], [1.660689743E12, 30869.0], [1.660689786E12, 22456.0], [1.660689757E12, 13099.0], [1.6606898E12, 37434.0], [1.660689755E12, 24325.0], [1.660689798E12, 29949.0], [1.660689759E12, 22448.0], [1.660689802E12, 28079.0], [1.660689751E12, 17779.0], [1.660689794E12, 20587.0], [1.660689753E12, 32741.0], [1.660689796E12, 42115.0], [1.660689767E12, 18714.0], [1.660689724E12, 23374.0], [1.660689728E12, 31798.0], [1.660689726E12, 28980.0], [1.660689769E12, 25261.0], [1.66068972E12, 4670.0], [1.660689718E12, 2133.0], [1.660689761E12, 28999.0], [1.660689804E12, 6552.0], [1.660689722E12, 27109.0], [1.660689765E12, 32743.0], [1.660689763E12, 16842.0], [1.660689736E12, 35556.0], [1.660689734E12, 16844.0], [1.660689777E12, 29940.0], [1.660689738E12, 27131.0], [1.660689781E12, 28057.0], [1.660689779E12, 31813.0], [1.66068973E12, 29935.0], [1.660689773E12, 39299.0], [1.660689771E12, 30871.0], [1.660689775E12, 24327.0], [1.660689732E12, 27125.0], [1.660689746E12, 18711.0], [1.660689789E12, 25256.0], [1.660689787E12, 34621.0], [1.660689791E12, 32750.0], [1.660689748E12, 34616.0], [1.660689783E12, 40237.0], [1.66068974E12, 23386.0], [1.660689744E12, 31811.0], [1.660689742E12, 29005.0], [1.660689785E12, 29944.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.660689799E12, 41863.0], [1.660689756E12, 57075.0], [1.66068976E12, 79908.0], [1.660689758E12, 66587.0], [1.660689801E12, 58990.0], [1.660689752E12, 64693.0], [1.66068975E12, 119856.0], [1.660689793E12, 57084.0], [1.660689754E12, 55174.0], [1.660689797E12, 57083.0], [1.660689795E12, 47571.0], [1.660689725E12, 58961.0], [1.660689768E12, 60882.0], [1.660689723E12, 57056.0], [1.660689766E12, 74196.0], [1.660689727E12, 45651.0], [1.66068977E12, 87522.0], [1.660689719E12, 1898.0], [1.660689762E12, 57080.0], [1.660689803E12, 62798.0], [1.660689721E12, 47538.0], [1.660689764E12, 51369.0], [1.660689735E12, 60878.0], [1.660689778E12, 41862.0], [1.660689737E12, 47565.0], [1.66068978E12, 68494.0], [1.660689729E12, 55168.0], [1.660689772E12, 30441.0], [1.660689733E12, 58980.0], [1.660689776E12, 57075.0], [1.660689731E12, 47565.0], [1.660689774E12, 55175.0], [1.660689745E12, 51372.0], [1.660689788E12, 55179.0], [1.660689749E12, 43758.0], [1.660689792E12, 64697.0], [1.660689747E12, 41857.0], [1.66068979E12, 57081.0], [1.660689741E12, 53275.0], [1.660689784E12, 38050.0], [1.660689739E12, 66586.0], [1.660689782E12, 36153.0], [1.660689743E12, 62780.0], [1.660689786E12, 45664.0], [1.660689757E12, 26637.0], [1.6606898E12, 76114.0], [1.660689755E12, 49467.0], [1.660689798E12, 60893.0], [1.660689759E12, 45662.0], [1.660689802E12, 57089.0], [1.660689751E12, 36152.0], [1.660689794E12, 41861.0], [1.660689753E12, 66586.0], [1.660689796E12, 85630.0], [1.660689767E12, 38054.0], [1.660689724E12, 47549.0], [1.660689728E12, 64676.0], [1.660689726E12, 58963.0], [1.660689769E12, 51370.0], [1.66068972E12, 9505.0], [1.660689718E12, 229.0], [1.660689761E12, 58976.0], [1.660689804E12, 13321.0], [1.660689722E12, 55152.0], [1.660689765E12, 66588.0], [1.660689763E12, 34248.0], [1.660689736E12, 72302.0], [1.660689734E12, 34250.0], [1.660689777E12, 60884.0], [1.660689738E12, 55174.0], [1.660689781E12, 57073.0], [1.660689779E12, 64691.0], [1.66068973E12, 60879.0], [1.660689773E12, 79913.0], [1.660689771E12, 62782.0], [1.660689775E12, 49469.0], [1.660689732E12, 55168.0], [1.660689746E12, 38051.0], [1.660689789E12, 51371.0], [1.660689787E12, 70400.0], [1.660689791E12, 66595.0], [1.660689748E12, 70395.0], [1.660689783E12, 81818.0], [1.66068974E12, 47561.0], [1.660689744E12, 64689.0], [1.660689742E12, 58982.0], [1.660689785E12, 60888.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.660689804E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 715.7142857142858, "minX": 1.660689718E12, "maxY": 9807.970588235294, "series": [{"data": [[1.660689719E12, 979.0]], "isOverall": false, "label": "DependencyPost", "isController": false}, {"data": [[1.660689799E12, 6011.545454545455], [1.660689756E12, 8784.466666666665], [1.66068976E12, 8112.000000000002], [1.660689758E12, 8612.742857142857], [1.660689801E12, 4157.129032258064], [1.660689752E12, 8105.999999999997], [1.66068975E12, 9249.412698412703], [1.660689793E12, 5593.5], [1.660689754E12, 8367.06896551724], [1.660689797E12, 5152.0], [1.660689795E12, 7356.4], [1.660689725E12, 2479.8064516129034], [1.660689768E12, 9115.5625], [1.660689723E12, 1556.3999999999999], [1.660689766E12, 8331.846153846152], [1.660689727E12, 3505.708333333333], [1.66068977E12, 9270.847826086952], [1.660689762E12, 8442.633333333335], [1.660689803E12, 1711.3333333333333], [1.660689721E12, 968.04], [1.660689764E12, 6571.1481481481505], [1.660689735E12, 7163.5], [1.660689778E12, 7313.863636363637], [1.660689737E12, 6808.84], [1.66068978E12, 8541.972222222223], [1.660689729E12, 4405.931034482757], [1.660689772E12, 8146.375], [1.660689733E12, 5806.806451612903], [1.660689776E12, 7425.966666666667], [1.660689731E12, 4437.56], [1.660689774E12, 7042.689655172412], [1.660689745E12, 9093.148148148148], [1.660689788E12, 6715.620689655173], [1.660689749E12, 7092.0], [1.660689792E12, 6967.999999999999], [1.660689747E12, 8327.863636363636], [1.66068979E12, 7973.633333333336], [1.660689741E12, 8533.071428571426], [1.660689784E12, 7732.55], [1.660689739E12, 8639.142857142855], [1.660689782E12, 9246.578947368418], [1.660689743E12, 9301.333333333334], [1.660689786E12, 7762.666666666666], [1.660689757E12, 7714.428571428572], [1.6606898E12, 4443.9000000000015], [1.660689755E12, 7351.576923076924], [1.660689798E12, 5913.218750000001], [1.660689759E12, 8696.83333333333], [1.660689802E12, 2758.3333333333335], [1.660689751E12, 7070.8421052631575], [1.660689794E12, 5369.318181818181], [1.660689753E12, 7862.4], [1.660689796E12, 6851.555555555556], [1.660689767E12, 9685.050000000001], [1.660689724E12, 2249.5200000000004], [1.660689728E12, 3952.735294117647], [1.660689726E12, 2931.032258064516], [1.660689769E12, 8832.629629629628], [1.66068972E12, 1021.8], [1.660689761E12, 7692.322580645162], [1.660689804E12, 715.7142857142858], [1.660689722E12, 1227.5862068965519], [1.660689765E12, 8608.57142857143], [1.660689763E12, 6384.944444444445], [1.660689736E12, 7058.28947368421], [1.660689734E12, 6296.888888888889], [1.660689777E12, 7698.937499999999], [1.660689738E12, 7922.379310344828], [1.660689781E12, 7320.733333333334], [1.660689779E12, 7813.558823529412], [1.66068973E12, 4549.874999999999], [1.660689773E12, 9441.97619047619], [1.660689771E12, 7838.515151515152], [1.660689775E12, 6790.269230769231], [1.660689732E12, 4682.000000000002], [1.660689746E12, 8765.65], [1.660689789E12, 7659.370370370371], [1.660689787E12, 7934.783783783784], [1.660689791E12, 7025.228571428571], [1.660689748E12, 7571.891891891892], [1.660689783E12, 7518.906976744186], [1.66068974E12, 8716.960000000001], [1.660689744E12, 9807.970588235294], [1.660689742E12, 8450.774193548386], [1.660689785E12, 8611.65625]], "isOverall": false, "label": "TestPost", "isController": false}, {"data": [[1.660689718E12, 2493.0]], "isOverall": false, "label": "LoginPost", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.660689804E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 715.4285714285714, "minX": 1.660689718E12, "maxY": 9807.79411764706, "series": [{"data": [[1.660689719E12, 979.0]], "isOverall": false, "label": "DependencyPost", "isController": false}, {"data": [[1.660689799E12, 6011.181818181818], [1.660689756E12, 8784.2], [1.66068976E12, 8111.690476190476], [1.660689758E12, 8612.542857142858], [1.660689801E12, 4157.032258064516], [1.660689752E12, 8105.882352941177], [1.66068975E12, 9249.158730158728], [1.660689793E12, 5593.3], [1.660689754E12, 8366.724137931036], [1.660689797E12, 5151.733333333332], [1.660689795E12, 7355.92], [1.660689725E12, 2479.4193548387093], [1.660689768E12, 9115.187499999998], [1.660689723E12, 1556.1666666666667], [1.660689766E12, 8331.641025641025], [1.660689727E12, 3505.416666666667], [1.66068977E12, 9270.739130434782], [1.660689762E12, 8442.466666666667], [1.660689803E12, 1711.1818181818185], [1.660689721E12, 967.72], [1.660689764E12, 6570.925925925927], [1.660689735E12, 7163.156250000002], [1.660689778E12, 7313.772727272727], [1.660689737E12, 6808.48], [1.66068978E12, 8541.75], [1.660689729E12, 4405.6551724137935], [1.660689772E12, 8146.25], [1.660689733E12, 5806.516129032257], [1.660689776E12, 7425.733333333334], [1.660689731E12, 4437.28], [1.660689774E12, 7042.51724137931], [1.660689745E12, 9092.925925925925], [1.660689788E12, 6715.413793103448], [1.660689749E12, 7091.391304347825], [1.660689792E12, 6967.676470588235], [1.660689747E12, 8327.272727272728], [1.66068979E12, 7973.533333333335], [1.660689741E12, 8532.857142857143], [1.660689784E12, 7732.5], [1.660689739E12, 8638.714285714286], [1.660689782E12, 9246.42105263158], [1.660689743E12, 9301.151515151514], [1.660689786E12, 7762.625], [1.660689757E12, 7713.999999999999], [1.6606898E12, 4443.750000000001], [1.660689755E12, 7351.192307692307], [1.660689798E12, 5912.843749999998], [1.660689759E12, 8696.708333333334], [1.660689802E12, 2758.1333333333337], [1.660689751E12, 7070.736842105263], [1.660689794E12, 5369.045454545454], [1.660689753E12, 7862.02857142857], [1.660689796E12, 6851.355555555556], [1.660689767E12, 9684.6], [1.660689724E12, 2249.1999999999994], [1.660689728E12, 3952.470588235295], [1.660689726E12, 2930.8709677419356], [1.660689769E12, 8832.444444444443], [1.66068972E12, 1021.0], [1.660689761E12, 7692.1612903225805], [1.660689804E12, 715.4285714285714], [1.660689722E12, 1227.2413793103449], [1.660689765E12, 8608.428571428569], [1.660689763E12, 6384.388888888889], [1.660689736E12, 7058.078947368421], [1.660689734E12, 6296.0], [1.660689777E12, 7698.781250000001], [1.660689738E12, 7922.0344827586205], [1.660689781E12, 7320.299999999999], [1.660689779E12, 7813.176470588235], [1.66068973E12, 4549.34375], [1.660689773E12, 9441.785714285712], [1.660689771E12, 7838.242424242422], [1.660689775E12, 6789.961538461538], [1.660689732E12, 4681.689655172413], [1.660689746E12, 8765.55], [1.660689789E12, 7659.259259259261], [1.660689787E12, 7934.7027027027025], [1.660689791E12, 7025.171428571428], [1.660689748E12, 7571.45945945946], [1.660689783E12, 7518.581395348836], [1.66068974E12, 8716.759999999998], [1.660689744E12, 9807.79411764706], [1.660689742E12, 8450.709677419354], [1.660689785E12, 8611.375]], "isOverall": false, "label": "TestPost", "isController": false}, {"data": [[1.660689718E12, 2489.0]], "isOverall": false, "label": "LoginPost", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.660689804E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 387.28571428571433, "minX": 1.660689718E12, "maxY": 3056.21875, "series": [{"data": [[1.660689719E12, 757.0]], "isOverall": false, "label": "DependencyPost", "isController": false}, {"data": [[1.660689799E12, 1496.1363636363635], [1.660689756E12, 1636.8999999999999], [1.66068976E12, 1475.0714285714287], [1.660689758E12, 1594.8571428571431], [1.660689801E12, 1214.8387096774195], [1.660689752E12, 1351.088235294118], [1.66068975E12, 1758.222222222222], [1.660689793E12, 1651.4999999999998], [1.660689754E12, 1267.1724137931035], [1.660689797E12, 1095.4], [1.660689795E12, 1532.8799999999999], [1.660689725E12, 679.6774193548387], [1.660689768E12, 1679.46875], [1.660689723E12, 659.9333333333333], [1.660689766E12, 1412.1794871794875], [1.660689727E12, 781.2083333333331], [1.66068977E12, 1887.391304347826], [1.660689762E12, 1940.9], [1.660689803E12, 709.6666666666666], [1.660689721E12, 640.1200000000001], [1.660689764E12, 2222.9259259259256], [1.660689735E12, 1643.71875], [1.660689778E12, 2418.3181818181815], [1.660689737E12, 1307.12], [1.66068978E12, 2365.6388888888896], [1.660689729E12, 894.2413793103448], [1.660689772E12, 1942.875], [1.660689733E12, 1538.9999999999998], [1.660689776E12, 2994.333333333334], [1.660689731E12, 1279.96], [1.660689774E12, 2690.793103448276], [1.660689745E12, 2399.9259259259256], [1.660689788E12, 1442.2758620689656], [1.660689749E12, 1394.2173913043478], [1.660689792E12, 1788.9411764705878], [1.660689747E12, 2134.954545454545], [1.66068979E12, 1689.2666666666664], [1.660689741E12, 1770.0], [1.660689784E12, 1378.4], [1.660689739E12, 1497.9142857142858], [1.660689782E12, 2016.947368421052], [1.660689743E12, 1897.3636363636367], [1.660689786E12, 1539.3333333333333], [1.660689757E12, 1704.6428571428576], [1.6606898E12, 1254.7750000000003], [1.660689755E12, 1550.8076923076924], [1.660689798E12, 1513.3749999999998], [1.660689759E12, 1726.4583333333335], [1.660689802E12, 1084.1666666666667], [1.660689751E12, 1499.6842105263158], [1.660689794E12, 1401.6818181818178], [1.660689753E12, 1906.057142857143], [1.660689796E12, 1381.5333333333333], [1.660689767E12, 1782.3500000000001], [1.660689724E12, 784.3599999999998], [1.660689728E12, 1005.7058823529413], [1.660689726E12, 786.8387096774194], [1.660689769E12, 1753.6296296296296], [1.66068972E12, 772.0], [1.660689761E12, 1590.0322580645163], [1.660689804E12, 387.28571428571433], [1.660689722E12, 609.8275862068965], [1.660689765E12, 1878.4285714285716], [1.660689763E12, 2180.5], [1.660689736E12, 1398.1052631578948], [1.660689734E12, 1569.111111111111], [1.660689777E12, 3056.21875], [1.660689738E12, 1346.2068965517242], [1.660689781E12, 1706.1], [1.660689779E12, 2280.735294117647], [1.66068973E12, 1027.9062499999998], [1.660689773E12, 2555.833333333333], [1.660689771E12, 1477.2424242424242], [1.660689775E12, 2735.1538461538457], [1.660689732E12, 1227.7931034482763], [1.660689746E12, 2990.0], [1.660689789E12, 1393.5555555555554], [1.660689787E12, 1499.1621621621623], [1.660689791E12, 1369.3142857142857], [1.660689748E12, 1897.4594594594596], [1.660689783E12, 1415.093023255814], [1.66068974E12, 1333.4399999999998], [1.660689744E12, 3049.470588235294], [1.660689742E12, 1641.5483870967741], [1.660689785E12, 1682.6874999999998]], "isOverall": false, "label": "TestPost", "isController": false}, {"data": [[1.660689718E12, 2273.0]], "isOverall": false, "label": "LoginPost", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.660689804E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 583.0, "minX": 1.660689718E12, "maxY": 21394.0, "series": [{"data": [[1.660689799E12, 12303.0], [1.660689756E12, 16548.0], [1.66068976E12, 16000.0], [1.660689758E12, 15153.0], [1.660689801E12, 7347.0], [1.660689752E12, 12508.0], [1.66068975E12, 21394.0], [1.660689793E12, 11907.0], [1.660689754E12, 14983.0], [1.660689797E12, 9880.0], [1.660689795E12, 12864.0], [1.660689725E12, 3828.0], [1.660689768E12, 17448.0], [1.660689723E12, 2668.0], [1.660689766E12, 13328.0], [1.660689727E12, 5493.0], [1.66068977E12, 17451.0], [1.660689719E12, 979.0], [1.660689762E12, 14207.0], [1.660689803E12, 3225.0], [1.660689721E12, 1253.0], [1.660689764E12, 13828.0], [1.660689735E12, 9733.0], [1.660689778E12, 11848.0], [1.660689737E12, 11988.0], [1.66068978E12, 14046.0], [1.660689729E12, 6191.0], [1.660689772E12, 13758.0], [1.660689733E12, 8811.0], [1.660689776E12, 11560.0], [1.660689731E12, 7366.0], [1.660689774E12, 17456.0], [1.660689745E12, 15612.0], [1.660689788E12, 13307.0], [1.660689749E12, 12443.0], [1.660689792E12, 17858.0], [1.660689747E12, 18695.0], [1.66068979E12, 16517.0], [1.660689741E12, 13424.0], [1.660689784E12, 15718.0], [1.660689739E12, 13882.0], [1.660689782E12, 15964.0], [1.660689743E12, 14683.0], [1.660689786E12, 10910.0], [1.660689757E12, 11815.0], [1.6606898E12, 8395.0], [1.660689755E12, 12723.0], [1.660689798E12, 10670.0], [1.660689759E12, 15650.0], [1.660689802E12, 5442.0], [1.660689751E12, 11345.0], [1.660689794E12, 11792.0], [1.660689753E12, 14238.0], [1.660689796E12, 13511.0], [1.660689767E12, 15222.0], [1.660689724E12, 3178.0], [1.660689728E12, 5628.0], [1.660689726E12, 4179.0], [1.660689769E12, 16418.0], [1.66068972E12, 1043.0], [1.660689718E12, 2493.0], [1.660689761E12, 12407.0], [1.660689804E12, 908.0], [1.660689722E12, 1692.0], [1.660689765E12, 14632.0], [1.660689763E12, 13536.0], [1.660689736E12, 11372.0], [1.660689734E12, 9449.0], [1.660689777E12, 11546.0], [1.660689738E12, 11373.0], [1.660689781E12, 13797.0], [1.660689779E12, 12528.0], [1.66068973E12, 6504.0], [1.660689773E12, 20056.0], [1.660689771E12, 13729.0], [1.660689775E12, 11259.0], [1.660689732E12, 7206.0], [1.660689746E12, 18235.0], [1.660689789E12, 11169.0], [1.660689787E12, 15382.0], [1.660689791E12, 11370.0], [1.660689748E12, 12248.0], [1.660689783E12, 16561.0], [1.66068974E12, 14110.0], [1.660689744E12, 16867.0], [1.660689742E12, 15568.0], [1.660689785E12, 15424.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.660689799E12, 10294.399999999998], [1.660689756E12, 12089.300000000001], [1.66068976E12, 12186.0], [1.660689758E12, 13075.199999999999], [1.660689801E12, 6944.400000000001], [1.660689752E12, 11523.000000000002], [1.66068975E12, 13680.400000000001], [1.660689793E12, 9431.600000000002], [1.660689754E12, 11880.0], [1.660689797E12, 8102.800000000002], [1.660689795E12, 11125.000000000002], [1.660689725E12, 3461.6], [1.660689768E12, 15351.699999999999], [1.660689723E12, 2335.0000000000005], [1.660689766E12, 12309.0], [1.660689727E12, 4985.0], [1.66068977E12, 15155.900000000001], [1.660689719E12, 979.0], [1.660689762E12, 12100.900000000001], [1.660689803E12, 3065.4], [1.660689721E12, 1162.6000000000001], [1.660689764E12, 12942.6], [1.660689735E12, 9400.3], [1.660689778E12, 11685.3], [1.660689737E12, 10429.2], [1.66068978E12, 13327.300000000001], [1.660689729E12, 5805.0], [1.660689772E12, 13288.300000000001], [1.660689733E12, 8393.0], [1.660689776E12, 10412.500000000002], [1.660689731E12, 6368.800000000001], [1.660689774E12, 10933.0], [1.660689745E12, 14505.0], [1.660689788E12, 11021.0], [1.660689749E12, 11919.0], [1.660689792E12, 10506.0], [1.660689747E12, 16601.499999999996], [1.66068979E12, 11559.2], [1.660689741E12, 12549.2], [1.660689784E12, 12458.800000000003], [1.660689739E12, 13355.8], [1.660689782E12, 13802.0], [1.660689743E12, 13160.400000000001], [1.660689786E12, 10692.5], [1.660689757E12, 10695.0], [1.6606898E12, 7079.699999999999], [1.660689755E12, 11339.900000000001], [1.660689798E12, 10104.6], [1.660689759E12, 14561.5], [1.660689802E12, 3942.0], [1.660689751E12, 9244.0], [1.660689794E12, 10342.3], [1.660689753E12, 13284.8], [1.660689796E12, 11222.199999999999], [1.660689767E12, 12991.6], [1.660689724E12, 2918.4], [1.660689728E12, 5243.5], [1.660689726E12, 3845.0], [1.660689769E12, 13719.0], [1.66068972E12, 1043.0], [1.660689718E12, 2493.0], [1.660689761E12, 11048.2], [1.660689804E12, 908.0], [1.660689722E12, 1585.0], [1.660689765E12, 13840.199999999999], [1.660689763E12, 11235.600000000004], [1.660689736E12, 10829.7], [1.660689734E12, 9125.0], [1.660689777E12, 10772.8], [1.660689738E12, 10886.0], [1.660689781E12, 11870.6], [1.660689779E12, 10735.5], [1.66068973E12, 6064.5], [1.660689773E12, 14902.2], [1.660689771E12, 11172.8], [1.660689775E12, 10013.6], [1.660689732E12, 7172.0], [1.660689746E12, 15633.300000000014], [1.660689789E12, 10459.2], [1.660689787E12, 12582.600000000002], [1.660689791E12, 9933.6], [1.660689748E12, 10478.0], [1.660689783E12, 12120.800000000001], [1.66068974E12, 13040.400000000001], [1.660689744E12, 15845.5], [1.660689742E12, 13937.000000000002], [1.660689785E12, 12173.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.660689799E12, 12303.0], [1.660689756E12, 16548.0], [1.66068976E12, 16000.0], [1.660689758E12, 15153.0], [1.660689801E12, 7347.0], [1.660689752E12, 12508.0], [1.66068975E12, 21394.0], [1.660689793E12, 11907.0], [1.660689754E12, 14983.0], [1.660689797E12, 9880.0], [1.660689795E12, 12864.0], [1.660689725E12, 3828.0], [1.660689768E12, 17448.0], [1.660689723E12, 2668.0], [1.660689766E12, 13328.0], [1.660689727E12, 5493.0], [1.66068977E12, 17451.0], [1.660689719E12, 979.0], [1.660689762E12, 14207.0], [1.660689803E12, 3225.0], [1.660689721E12, 1253.0], [1.660689764E12, 13828.0], [1.660689735E12, 9733.0], [1.660689778E12, 11848.0], [1.660689737E12, 11988.0], [1.66068978E12, 14046.0], [1.660689729E12, 6191.0], [1.660689772E12, 13758.0], [1.660689733E12, 8811.0], [1.660689776E12, 11560.0], [1.660689731E12, 7366.0], [1.660689774E12, 17456.0], [1.660689745E12, 15612.0], [1.660689788E12, 13307.0], [1.660689749E12, 12443.0], [1.660689792E12, 17858.0], [1.660689747E12, 18695.0], [1.66068979E12, 16517.0], [1.660689741E12, 13424.0], [1.660689784E12, 15718.0], [1.660689739E12, 13882.0], [1.660689782E12, 15964.0], [1.660689743E12, 14683.0], [1.660689786E12, 10910.0], [1.660689757E12, 11815.0], [1.6606898E12, 8395.0], [1.660689755E12, 12723.0], [1.660689798E12, 10670.0], [1.660689759E12, 15650.0], [1.660689802E12, 5442.0], [1.660689751E12, 11345.0], [1.660689794E12, 11792.0], [1.660689753E12, 14238.0], [1.660689796E12, 13511.0], [1.660689767E12, 15222.0], [1.660689724E12, 3178.0], [1.660689728E12, 5628.0], [1.660689726E12, 4179.0], [1.660689769E12, 16418.0], [1.66068972E12, 1043.0], [1.660689718E12, 2493.0], [1.660689761E12, 12407.0], [1.660689804E12, 908.0], [1.660689722E12, 1692.0], [1.660689765E12, 14632.0], [1.660689763E12, 13536.0], [1.660689736E12, 11372.0], [1.660689734E12, 9449.0], [1.660689777E12, 11546.0], [1.660689738E12, 11373.0], [1.660689781E12, 13797.0], [1.660689779E12, 12528.0], [1.66068973E12, 6504.0], [1.660689773E12, 20056.0], [1.660689771E12, 13729.0], [1.660689775E12, 11259.0], [1.660689732E12, 7206.0], [1.660689746E12, 18235.0], [1.660689789E12, 11169.0], [1.660689787E12, 15382.0], [1.660689791E12, 11370.0], [1.660689748E12, 12248.0], [1.660689783E12, 16561.0], [1.66068974E12, 14110.0], [1.660689744E12, 16867.0], [1.660689742E12, 15568.0], [1.660689785E12, 15424.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.660689799E12, 12088.199999999997], [1.660689756E12, 14630.699999999997], [1.66068976E12, 13342.550000000001], [1.660689758E12, 14193.799999999996], [1.660689801E12, 7276.2], [1.660689752E12, 12424.0], [1.66068975E12, 15655.449999999993], [1.660689793E12, 11240.4], [1.660689754E12, 14372.0], [1.660689797E12, 9800.8], [1.660689795E12, 12441.3], [1.660689725E12, 3702.6], [1.660689768E12, 17404.45], [1.660689723E12, 2566.7999999999997], [1.660689766E12, 12720.0], [1.660689727E12, 5380.75], [1.66068977E12, 15901.8], [1.660689719E12, 979.0], [1.660689762E12, 13307.749999999998], [1.660689803E12, 3185.7999999999997], [1.660689721E12, 1245.5], [1.660689764E12, 13645.999999999998], [1.660689735E12, 9634.85], [1.660689778E12, 11834.35], [1.660689737E12, 11553.3], [1.66068978E12, 13805.449999999999], [1.660689729E12, 6118.5], [1.660689772E12, 13758.0], [1.660689733E12, 8721.6], [1.660689776E12, 11384.0], [1.660689731E12, 7122.999999999999], [1.660689774E12, 16211.5], [1.660689745E12, 15253.999999999998], [1.660689788E12, 12200.5], [1.660689749E12, 12384.199999999999], [1.660689792E12, 12913.25], [1.660689747E12, 18618.8], [1.66068979E12, 16162.25], [1.660689741E12, 13334.9], [1.660689784E12, 15563.699999999997], [1.660689739E12, 13694.8], [1.660689782E12, 15964.0], [1.660689743E12, 14286.8], [1.660689786E12, 10865.0], [1.660689757E12, 11815.0], [1.6606898E12, 7863.949999999998], [1.660689755E12, 12447.9], [1.660689798E12, 10484.75], [1.660689759E12, 15406.75], [1.660689802E12, 4793.549999999999], [1.660689751E12, 11345.0], [1.660689794E12, 11634.349999999999], [1.660689753E12, 14059.599999999999], [1.660689796E12, 12864.699999999999], [1.660689767E12, 15111.499999999998], [1.660689724E12, 3108.3999999999996], [1.660689728E12, 5466.0], [1.660689726E12, 4057.7999999999997], [1.660689769E12, 15557.599999999995], [1.66068972E12, 1043.0], [1.660689718E12, 2493.0], [1.660689761E12, 11932.4], [1.660689804E12, 908.0], [1.660689722E12, 1649.0], [1.660689765E12, 14582.4], [1.660689763E12, 13536.0], [1.660689736E12, 11145.9], [1.660689734E12, 9449.0], [1.660689777E12, 11375.699999999999], [1.660689738E12, 11313.5], [1.660689781E12, 13315.199999999999], [1.660689779E12, 12231.75], [1.66068973E12, 6269.999999999999], [1.660689773E12, 15616.2], [1.660689771E12, 13207.499999999998], [1.660689775E12, 10840.749999999998], [1.660689732E12, 7202.0], [1.660689746E12, 18134.85], [1.660689789E12, 10899.8], [1.660689787E12, 14036.500000000002], [1.660689791E12, 11092.399999999998], [1.660689748E12, 11168.900000000001], [1.660689783E12, 15030.199999999992], [1.66068974E12, 13835.199999999999], [1.660689744E12, 16603.0], [1.660689742E12, 15406.0], [1.660689785E12, 13857.499999999995]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.660689799E12, 2487.0], [1.660689756E12, 3954.0], [1.66068976E12, 3596.0], [1.660689758E12, 5135.0], [1.660689801E12, 1404.0], [1.660689752E12, 2050.0], [1.66068975E12, 1492.0], [1.660689793E12, 1553.0], [1.660689754E12, 1796.0], [1.660689797E12, 1394.0], [1.660689795E12, 2784.0], [1.660689725E12, 1334.0], [1.660689768E12, 3314.0], [1.660689723E12, 754.0], [1.660689766E12, 3593.0], [1.660689727E12, 1101.0], [1.66068977E12, 3712.0], [1.660689719E12, 979.0], [1.660689762E12, 3121.0], [1.660689803E12, 699.0], [1.660689721E12, 622.0], [1.660689764E12, 1284.0], [1.660689735E12, 1929.0], [1.660689778E12, 2760.0], [1.660689737E12, 2799.0], [1.66068978E12, 3983.0], [1.660689729E12, 2352.0], [1.660689772E12, 1659.0], [1.660689733E12, 2940.0], [1.660689776E12, 1986.0], [1.660689731E12, 1894.0], [1.660689774E12, 3424.0], [1.660689745E12, 3717.0], [1.660689788E12, 1016.0], [1.660689749E12, 1347.0], [1.660689792E12, 3087.0], [1.660689747E12, 3656.0], [1.66068979E12, 3165.0], [1.660689741E12, 3285.0], [1.660689784E12, 2743.0], [1.660689739E12, 2995.0], [1.660689782E12, 2138.0], [1.660689743E12, 4164.0], [1.660689786E12, 3110.0], [1.660689757E12, 4569.0], [1.6606898E12, 1791.0], [1.660689755E12, 4085.0], [1.660689798E12, 2226.0], [1.660689759E12, 4921.0], [1.660689802E12, 693.0], [1.660689751E12, 2814.0], [1.660689794E12, 1027.0], [1.660689753E12, 2342.0], [1.660689796E12, 1120.0], [1.660689767E12, 3903.0], [1.660689724E12, 1314.0], [1.660689728E12, 1972.0], [1.660689726E12, 1162.0], [1.660689769E12, 4193.0], [1.66068972E12, 1011.0], [1.660689718E12, 2493.0], [1.660689761E12, 3371.0], [1.660689804E12, 583.0], [1.660689722E12, 661.0], [1.660689765E12, 2836.0], [1.660689763E12, 2851.0], [1.660689736E12, 792.0], [1.660689734E12, 3224.0], [1.660689777E12, 2978.0], [1.660689738E12, 2713.0], [1.660689781E12, 1834.0], [1.660689779E12, 1816.0], [1.66068973E12, 1727.0], [1.660689773E12, 2223.0], [1.660689771E12, 5135.0], [1.660689775E12, 1976.0], [1.660689732E12, 1032.0], [1.660689746E12, 4378.0], [1.660689789E12, 1574.0], [1.660689787E12, 2475.0], [1.660689791E12, 2287.0], [1.660689748E12, 2297.0], [1.660689783E12, 1393.0], [1.66068974E12, 2663.0], [1.660689744E12, 6186.0], [1.660689742E12, 2988.0], [1.660689785E12, 3371.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.660689799E12, 5905.0], [1.660689756E12, 8659.5], [1.66068976E12, 7707.5], [1.660689758E12, 8271.0], [1.660689801E12, 3964.0], [1.660689752E12, 8446.0], [1.66068975E12, 9114.5], [1.660689793E12, 5433.5], [1.660689754E12, 8464.0], [1.660689797E12, 5067.5], [1.660689795E12, 7393.0], [1.660689725E12, 2553.0], [1.660689768E12, 8675.5], [1.660689723E12, 1381.0], [1.660689766E12, 7420.0], [1.660689727E12, 3404.0], [1.66068977E12, 9144.5], [1.660689719E12, 979.0], [1.660689762E12, 9078.5], [1.660689803E12, 1547.0], [1.660689721E12, 1016.0], [1.660689764E12, 6152.0], [1.660689735E12, 7565.5], [1.660689778E12, 7474.5], [1.660689737E12, 5808.0], [1.66068978E12, 7266.5], [1.660689729E12, 4518.0], [1.660689772E12, 8085.0], [1.660689733E12, 5604.0], [1.660689776E12, 7885.0], [1.660689731E12, 4622.0], [1.660689774E12, 6194.0], [1.660689745E12, 8894.0], [1.660689788E12, 7437.0], [1.660689749E12, 6874.0], [1.660689792E12, 6988.0], [1.660689747E12, 7438.0], [1.66068979E12, 7879.5], [1.660689741E12, 8873.5], [1.660689784E12, 6822.0], [1.660689739E12, 8413.0], [1.660689782E12, 9501.0], [1.660689743E12, 9146.0], [1.660689786E12, 7526.0], [1.660689757E12, 8017.0], [1.6606898E12, 4283.0], [1.660689755E12, 6499.0], [1.660689798E12, 5559.5], [1.660689759E12, 8338.0], [1.660689802E12, 2670.5], [1.660689751E12, 8530.0], [1.660689794E12, 4583.5], [1.660689753E12, 6819.0], [1.660689796E12, 6833.0], [1.660689767E12, 10494.0], [1.660689724E12, 2339.0], [1.660689728E12, 4084.0], [1.660689726E12, 2932.0], [1.660689769E12, 8777.0], [1.66068972E12, 1015.0], [1.660689718E12, 2493.0], [1.660689761E12, 7159.0], [1.660689804E12, 721.0], [1.660689722E12, 1240.0], [1.660689765E12, 8943.0], [1.660689763E12, 5951.5], [1.660689736E12, 7496.5], [1.660689734E12, 5992.5], [1.660689777E12, 6955.5], [1.660689738E12, 8345.0], [1.660689781E12, 6835.5], [1.660689779E12, 7899.0], [1.66068973E12, 4474.5], [1.660689773E12, 8508.5], [1.660689771E12, 6844.0], [1.660689775E12, 7044.0], [1.660689732E12, 5273.0], [1.660689746E12, 8069.5], [1.660689789E12, 8114.0], [1.660689787E12, 7727.0], [1.660689791E12, 7201.0], [1.660689748E12, 7962.0], [1.660689783E12, 7510.0], [1.66068974E12, 10257.0], [1.660689744E12, 8572.5], [1.660689742E12, 8081.0], [1.660689785E12, 9012.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.660689804E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 721.0, "minX": 1.0, "maxY": 13669.0, "series": [{"data": [[32.0, 6772.0], [33.0, 6681.0], [34.0, 7032.0], [35.0, 7971.0], [37.0, 7888.0], [36.0, 7266.5], [38.0, 7496.5], [39.0, 7420.0], [40.0, 4283.0], [42.0, 8219.0], [43.0, 7510.0], [45.0, 6833.0], [46.0, 9144.5], [63.0, 9114.5], [5.0, 1015.0], [7.0, 721.0], [14.0, 8017.0], [1.0, 1736.0], [16.0, 8085.0], [18.0, 5992.5], [19.0, 8718.0], [20.0, 8174.0], [22.0, 6609.5], [23.0, 6874.0], [24.0, 6743.0], [25.0, 4521.0], [26.0, 6911.0], [27.0, 8068.0], [28.0, 8873.5], [29.0, 5485.0], [30.0, 5774.5], [31.0, 4361.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[34.0, 13669.0], [63.0, 9638.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 63.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 721.0, "minX": 1.0, "maxY": 13669.0, "series": [{"data": [[32.0, 6771.5], [33.0, 6681.0], [34.0, 7032.0], [35.0, 7971.0], [37.0, 7888.0], [36.0, 7266.5], [38.0, 7496.5], [39.0, 7420.0], [40.0, 4283.0], [42.0, 8218.5], [43.0, 7510.0], [45.0, 6832.0], [46.0, 9144.0], [63.0, 9114.0], [5.0, 1014.0], [7.0, 721.0], [14.0, 8016.5], [1.0, 1734.0], [16.0, 8084.5], [18.0, 5992.5], [19.0, 8718.0], [20.0, 8173.5], [22.0, 6609.0], [23.0, 6874.0], [24.0, 6743.0], [25.0, 4521.0], [26.0, 6910.5], [27.0, 8068.0], [28.0, 8873.5], [29.0, 5485.0], [30.0, 5774.0], [31.0, 4361.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[34.0, 13669.0], [63.0, 9638.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 63.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.660689716E12, "maxY": 63.0, "series": [{"data": [[1.660689799E12, 13.0], [1.660689756E12, 30.0], [1.66068976E12, 42.0], [1.660689758E12, 35.0], [1.660689801E12, 11.0], [1.660689752E12, 34.0], [1.66068975E12, 63.0], [1.660689793E12, 18.0], [1.660689754E12, 29.0], [1.660689797E12, 14.0], [1.660689795E12, 19.0], [1.660689725E12, 56.0], [1.660689768E12, 32.0], [1.660689723E12, 55.0], [1.660689766E12, 39.0], [1.660689727E12, 49.0], [1.66068977E12, 46.0], [1.660689719E12, 5.0], [1.660689762E12, 30.0], [1.660689803E12, 9.0], [1.660689721E12, 50.0], [1.660689764E12, 26.0], [1.660689735E12, 32.0], [1.660689778E12, 19.0], [1.660689737E12, 25.0], [1.66068978E12, 33.0], [1.660689729E12, 49.0], [1.660689772E12, 15.0], [1.660689733E12, 31.0], [1.660689776E12, 28.0], [1.660689731E12, 25.0], [1.660689774E12, 25.0], [1.660689745E12, 27.0], [1.660689788E12, 25.0], [1.660689749E12, 23.0], [1.660689792E12, 27.0], [1.660689747E12, 22.0], [1.66068979E12, 24.0], [1.660689741E12, 28.0], [1.660689784E12, 14.0], [1.660689739E12, 35.0], [1.660689782E12, 19.0], [1.660689743E12, 33.0], [1.660689786E12, 19.0], [1.660689757E12, 14.0], [1.6606898E12, 20.0], [1.660689755E12, 25.0], [1.660689798E12, 18.0], [1.660689759E12, 24.0], [1.660689802E12, 12.0], [1.660689716E12, 1.0], [1.660689751E12, 19.0], [1.660689794E12, 20.0], [1.660689753E12, 34.0], [1.660689796E12, 28.0], [1.660689767E12, 19.0], [1.660689724E12, 50.0], [1.660689728E12, 59.0], [1.660689726E12, 56.0], [1.660689769E12, 26.0], [1.66068972E12, 30.0], [1.660689718E12, 1.0], [1.660689761E12, 31.0], [1.660689804E12, 2.0], [1.660689722E12, 54.0], [1.660689765E12, 35.0], [1.660689763E12, 16.0], [1.660689736E12, 38.0], [1.660689734E12, 18.0], [1.660689777E12, 30.0], [1.660689738E12, 29.0], [1.660689781E12, 28.0], [1.660689779E12, 32.0], [1.66068973E12, 32.0], [1.660689773E12, 41.0], [1.660689771E12, 31.0], [1.660689775E12, 24.0], [1.660689732E12, 29.0], [1.660689746E12, 20.0], [1.660689789E12, 20.0], [1.660689787E12, 30.0], [1.660689791E12, 28.0], [1.660689748E12, 37.0], [1.660689783E12, 39.0], [1.66068974E12, 25.0], [1.660689744E12, 34.0], [1.660689742E12, 31.0], [1.660689785E12, 29.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.660689804E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.660689718E12, "maxY": 56.0, "series": [{"data": [[1.660689799E12, 22.0], [1.660689756E12, 30.0], [1.66068976E12, 42.0], [1.660689758E12, 35.0], [1.660689801E12, 31.0], [1.660689752E12, 33.0], [1.66068975E12, 56.0], [1.660689793E12, 30.0], [1.660689754E12, 29.0], [1.660689797E12, 30.0], [1.660689795E12, 25.0], [1.660689725E12, 31.0], [1.660689768E12, 32.0], [1.660689723E12, 30.0], [1.660689766E12, 39.0], [1.660689727E12, 24.0], [1.66068977E12, 46.0], [1.660689719E12, 1.0], [1.660689762E12, 30.0], [1.660689803E12, 33.0], [1.660689721E12, 25.0], [1.660689764E12, 27.0], [1.660689735E12, 32.0], [1.660689778E12, 22.0], [1.660689737E12, 25.0], [1.66068978E12, 36.0], [1.660689729E12, 29.0], [1.660689772E12, 16.0], [1.660689733E12, 31.0], [1.660689776E12, 30.0], [1.660689731E12, 25.0], [1.660689774E12, 29.0], [1.660689745E12, 27.0], [1.660689788E12, 29.0], [1.660689749E12, 23.0], [1.660689792E12, 34.0], [1.660689747E12, 22.0], [1.66068979E12, 30.0], [1.660689741E12, 28.0], [1.660689784E12, 20.0], [1.660689739E12, 35.0], [1.660689782E12, 19.0], [1.660689743E12, 33.0], [1.660689786E12, 24.0], [1.660689757E12, 14.0], [1.6606898E12, 40.0], [1.660689755E12, 26.0], [1.660689798E12, 32.0], [1.660689759E12, 24.0], [1.660689802E12, 30.0], [1.660689751E12, 19.0], [1.660689794E12, 22.0], [1.660689753E12, 35.0], [1.660689796E12, 45.0], [1.660689767E12, 20.0], [1.660689724E12, 25.0], [1.660689728E12, 34.0], [1.660689726E12, 31.0], [1.660689769E12, 27.0], [1.66068972E12, 5.0], [1.660689718E12, 1.0], [1.660689761E12, 31.0], [1.660689804E12, 7.0], [1.660689722E12, 29.0], [1.660689765E12, 35.0], [1.660689763E12, 18.0], [1.660689736E12, 38.0], [1.660689734E12, 18.0], [1.660689777E12, 32.0], [1.660689738E12, 29.0], [1.660689781E12, 30.0], [1.660689779E12, 34.0], [1.66068973E12, 32.0], [1.660689773E12, 42.0], [1.660689771E12, 33.0], [1.660689775E12, 26.0], [1.660689732E12, 29.0], [1.660689746E12, 20.0], [1.660689789E12, 27.0], [1.660689787E12, 37.0], [1.660689791E12, 35.0], [1.660689748E12, 37.0], [1.660689783E12, 43.0], [1.66068974E12, 25.0], [1.660689744E12, 34.0], [1.660689742E12, 31.0], [1.660689785E12, 32.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.660689752E12, 1.0], [1.66068975E12, 7.0]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.660689804E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.660689718E12, "maxY": 56.0, "series": [{"data": [[1.660689752E12, 1.0], [1.66068975E12, 7.0]], "isOverall": false, "label": "TestPost-failure", "isController": false}, {"data": [[1.660689719E12, 1.0]], "isOverall": false, "label": "DependencyPost-success", "isController": false}, {"data": [[1.660689799E12, 22.0], [1.660689756E12, 30.0], [1.66068976E12, 42.0], [1.660689758E12, 35.0], [1.660689801E12, 31.0], [1.660689752E12, 33.0], [1.66068975E12, 56.0], [1.660689793E12, 30.0], [1.660689754E12, 29.0], [1.660689797E12, 30.0], [1.660689795E12, 25.0], [1.660689725E12, 31.0], [1.660689768E12, 32.0], [1.660689723E12, 30.0], [1.660689766E12, 39.0], [1.660689727E12, 24.0], [1.66068977E12, 46.0], [1.660689762E12, 30.0], [1.660689803E12, 33.0], [1.660689721E12, 25.0], [1.660689764E12, 27.0], [1.660689735E12, 32.0], [1.660689778E12, 22.0], [1.660689737E12, 25.0], [1.66068978E12, 36.0], [1.660689729E12, 29.0], [1.660689772E12, 16.0], [1.660689733E12, 31.0], [1.660689776E12, 30.0], [1.660689731E12, 25.0], [1.660689774E12, 29.0], [1.660689745E12, 27.0], [1.660689788E12, 29.0], [1.660689749E12, 23.0], [1.660689792E12, 34.0], [1.660689747E12, 22.0], [1.66068979E12, 30.0], [1.660689741E12, 28.0], [1.660689784E12, 20.0], [1.660689739E12, 35.0], [1.660689782E12, 19.0], [1.660689743E12, 33.0], [1.660689786E12, 24.0], [1.660689757E12, 14.0], [1.6606898E12, 40.0], [1.660689755E12, 26.0], [1.660689798E12, 32.0], [1.660689759E12, 24.0], [1.660689802E12, 30.0], [1.660689751E12, 19.0], [1.660689794E12, 22.0], [1.660689753E12, 35.0], [1.660689796E12, 45.0], [1.660689767E12, 20.0], [1.660689724E12, 25.0], [1.660689728E12, 34.0], [1.660689726E12, 31.0], [1.660689769E12, 27.0], [1.66068972E12, 5.0], [1.660689761E12, 31.0], [1.660689804E12, 7.0], [1.660689722E12, 29.0], [1.660689765E12, 35.0], [1.660689763E12, 18.0], [1.660689736E12, 38.0], [1.660689734E12, 18.0], [1.660689777E12, 32.0], [1.660689738E12, 29.0], [1.660689781E12, 30.0], [1.660689779E12, 34.0], [1.66068973E12, 32.0], [1.660689773E12, 42.0], [1.660689771E12, 33.0], [1.660689775E12, 26.0], [1.660689732E12, 29.0], [1.660689746E12, 20.0], [1.660689789E12, 27.0], [1.660689787E12, 37.0], [1.660689791E12, 35.0], [1.660689748E12, 37.0], [1.660689783E12, 43.0], [1.66068974E12, 25.0], [1.660689744E12, 34.0], [1.660689742E12, 31.0], [1.660689785E12, 32.0]], "isOverall": false, "label": "TestPost-success", "isController": false}, {"data": [[1.660689718E12, 1.0]], "isOverall": false, "label": "LoginPost-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.660689804E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.660689718E12, "maxY": 56.0, "series": [{"data": [[1.660689799E12, 22.0], [1.660689756E12, 30.0], [1.66068976E12, 42.0], [1.660689758E12, 35.0], [1.660689801E12, 31.0], [1.660689752E12, 33.0], [1.66068975E12, 56.0], [1.660689793E12, 30.0], [1.660689754E12, 29.0], [1.660689797E12, 30.0], [1.660689795E12, 25.0], [1.660689725E12, 31.0], [1.660689768E12, 32.0], [1.660689723E12, 30.0], [1.660689766E12, 39.0], [1.660689727E12, 24.0], [1.66068977E12, 46.0], [1.660689719E12, 1.0], [1.660689762E12, 30.0], [1.660689803E12, 33.0], [1.660689721E12, 25.0], [1.660689764E12, 27.0], [1.660689735E12, 32.0], [1.660689778E12, 22.0], [1.660689737E12, 25.0], [1.66068978E12, 36.0], [1.660689729E12, 29.0], [1.660689772E12, 16.0], [1.660689733E12, 31.0], [1.660689776E12, 30.0], [1.660689731E12, 25.0], [1.660689774E12, 29.0], [1.660689745E12, 27.0], [1.660689788E12, 29.0], [1.660689749E12, 23.0], [1.660689792E12, 34.0], [1.660689747E12, 22.0], [1.66068979E12, 30.0], [1.660689741E12, 28.0], [1.660689784E12, 20.0], [1.660689739E12, 35.0], [1.660689782E12, 19.0], [1.660689743E12, 33.0], [1.660689786E12, 24.0], [1.660689757E12, 14.0], [1.6606898E12, 40.0], [1.660689755E12, 26.0], [1.660689798E12, 32.0], [1.660689759E12, 24.0], [1.660689802E12, 30.0], [1.660689751E12, 19.0], [1.660689794E12, 22.0], [1.660689753E12, 35.0], [1.660689796E12, 45.0], [1.660689767E12, 20.0], [1.660689724E12, 25.0], [1.660689728E12, 34.0], [1.660689726E12, 31.0], [1.660689769E12, 27.0], [1.66068972E12, 5.0], [1.660689718E12, 1.0], [1.660689761E12, 31.0], [1.660689804E12, 7.0], [1.660689722E12, 29.0], [1.660689765E12, 35.0], [1.660689763E12, 18.0], [1.660689736E12, 38.0], [1.660689734E12, 18.0], [1.660689777E12, 32.0], [1.660689738E12, 29.0], [1.660689781E12, 30.0], [1.660689779E12, 34.0], [1.66068973E12, 32.0], [1.660689773E12, 42.0], [1.660689771E12, 33.0], [1.660689775E12, 26.0], [1.660689732E12, 29.0], [1.660689746E12, 20.0], [1.660689789E12, 27.0], [1.660689787E12, 37.0], [1.660689791E12, 35.0], [1.660689748E12, 37.0], [1.660689783E12, 43.0], [1.66068974E12, 25.0], [1.660689744E12, 34.0], [1.660689742E12, 31.0], [1.660689785E12, 32.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.660689752E12, 1.0], [1.66068975E12, 7.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.660689804E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

